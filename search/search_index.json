{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to My Documentation Site","text":""},{"location":"#table-of-contents","title":"Table of Contents","text":"<ul> <li>Getting Started</li> <li>Features</li> <li>Code Examples</li> <li>Resources</li> </ul>"},{"location":"#getting-started","title":"Getting Started","text":"<p>This is a sample documentation site with various types of content. Here you'll find examples of different markdown elements and formatting options.</p>"},{"location":"#prerequisites","title":"Prerequisites","text":"<ul> <li>Basic understanding of Markdown</li> <li>A text editor or IDE</li> <li>Git (optional)</li> </ul>"},{"location":"#features","title":"Features","text":"<p>Our documentation includes the following features:</p> <ol> <li>Responsive Design - Works on all devices</li> <li>Code Highlighting - Syntax highlighting for multiple languages</li> <li>Search Functionality - Find content quickly</li> <li>Navigation - Easy-to-use sidebar navigation</li> </ol>"},{"location":"#key-benefits","title":"Key Benefits","text":"Feature Description Status Fast Loading Optimized for speed \u2705 Complete Mobile Friendly Responsive design \u2705 Complete Dark Mode Toggle theme support \ud83d\udea7 In Progress Offline Support PWA capabilities \ud83d\udcdd Planned"},{"location":"#code-examples","title":"Code Examples","text":"<p>Here are some code snippets in different languages:</p>"},{"location":"#javascript","title":"JavaScript","text":"<pre><code>function greetUser(name) {\n    return `Hello, ${name}! Welcome to our documentation.`;\n}\n\nconst user = \"Developer\";\nconsole.log(greetUser(user));\n</code></pre>"},{"location":"#python","title":"Python","text":"<pre><code>def calculate_fibonacci(n):\n    if n &lt;= 1:\n        return n\n    return calculate_fibonacci(n-1) + calculate_fibonacci(n-2)\n\n# Generate first 10 Fibonacci numbers\nfor i in range(10):\n    print(f\"F({i}) = {calculate_fibonacci(i)}\")\n</code></pre>"},{"location":"#css","title":"CSS","text":"<pre><code>.documentation-theme {\n    --primary-color: #2563eb;\n    --secondary-color: #64748b;\n    --background-color: #f8fafc;\n    --text-color: #334155;\n}\n\n.card {\n    background: var(--background-color);\n    border-radius: 8px;\n    padding: 1.5rem;\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n</code></pre>"},{"location":"#resources","title":"Resources","text":""},{"location":"#useful-links","title":"Useful Links","text":"<ul> <li>Markdown Guide</li> <li>GitHub Documentation</li> <li>VS Code Tips</li> </ul>"},{"location":"#quick-tips","title":"Quick Tips","text":"<p>Pro Tip: Use keyboard shortcuts to speed up your workflow. <code>Ctrl+Shift+P</code> opens the command palette in VS Code.</p> <p>Note: Always backup your work before making major changes.</p>"},{"location":"#contact-information","title":"Contact Information","text":"<p>For questions or support, reach out to us:</p> <ul> <li>\ud83d\udce7 Email: support@example.com</li> <li>\ud83d\udcac Discord: Join our server</li> <li>\ud83d\udc26 Twitter: @ExampleDocs</li> </ul>"},{"location":"#recent-updates","title":"Recent Updates","text":""},{"location":"#version-210-july-2025","title":"Version 2.1.0 (July 2025)","text":"<ul> <li>\u2728 Added new search functionality</li> <li>\ud83d\udc1b Fixed navigation issues on mobile</li> <li>\ud83d\udcdd Updated documentation structure</li> <li>\ud83c\udfa8 Improved visual design</li> </ul>"},{"location":"#version-200-june-2025","title":"Version 2.0.0 (June 2025)","text":"<ul> <li>\ud83d\ude80 Complete redesign</li> <li>\u26a1 Performance improvements</li> <li>\ud83d\udcf1 Mobile-first approach</li> <li>\ud83c\udf19 Dark mode support</li> </ul>"},{"location":"#technical-specifications","title":"Technical Specifications","text":""},{"location":"#system-requirements","title":"System Requirements","text":"<ul> <li>Browser: Chrome 90+, Firefox 88+, Safari 14+</li> <li>Node.js: 16.x or higher (for development)</li> <li>Memory: 512 MB RAM minimum</li> <li>Storage: 100 MB available space</li> </ul>"},{"location":"#api-reference","title":"API Reference","text":""},{"location":"#authentication","title":"Authentication","text":"<pre><code>POST /api/auth/login\nContent-Type: application/json\n\n{\n  \"username\": \"user@example.com\",\n  \"password\": \"securePassword123\"\n}\n</code></pre>"},{"location":"#response","title":"Response","text":"<pre><code>{\n  \"success\": true,\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"expires_in\": 3600\n}\n</code></pre> <p>Last updated: July 3, 2025</p> <p>\u00a9 2025 Documentation Team. All rights reserved.</p>"},{"location":"ASP/","title":"Mastering Classic ASP: A Beginner\u2019s Guide to Active Server Pages","text":"<p>Tagline: Dive into the world of Classic ASP and learn how it laid the foundation for modern web development!</p>"},{"location":"ASP/#introduction","title":"Introduction","text":"<p>Active Server Pages (ASP), also known as Classic ASP, may feel like a relic in today\u2019s tech-driven development world. However, understanding its fundamentals offers insight into how server-side scripting revolutionized dynamic web applications. Developed by Microsoft, Classic ASP was introduced in 1996 as part of Internet Information Services (IIS) for Windows. It allowed developers to create server-side webpages that could dynamically update based on user interactions or backend data.</p> <p>This blog explores the basics of Classic ASP, walks through its architecture, presents a simple example, and highlights use cases where its legacy persists. Let\u2019s jump in!</p>"},{"location":"ASP/#what-is-classic-asp","title":"What is Classic ASP?","text":"<p>Classic ASP stands for Active Server Pages and is a server-side scripting environment. Its key feature is enabling web pages to include dynamic content by blending HTML with server-side scripts like VBScript or JScript (Microsoft's variant of JavaScript). </p> <p>Key characteristics of ASP: 1. Dynamic Scripting: Executes code on the server and sends HTML output to the browser. 2. State Management: Offers session and application handling for persistent data. 3. Access to Databases: Integrates with databases like Microsoft Access and SQL Server via ADO (ActiveX Data Objects). 4. Client-Side Independence: Outputs plain HTML, making ASP compatible across all browsers.  </p> <p>It predates modern frameworks such as ASP.NET but serves as the precursor for Microsoft\u2019s web development ecosystem.</p>"},{"location":"ASP/#how-does-asp-work","title":"How Does ASP Work?","text":"<p>The process of an ASP-based application can be explained through these steps:</p> <ol> <li>User Request: A user requests an <code>.asp</code> file via the browser. For example, <code>http://example.com/index.asp</code>.  </li> <li>Server-Side Script Execution: The web server (IIS) processes the ASP code within the file, dynamically generating HTML based on logic and/or database queries.  </li> <li>Response to Client: The server sends the finalized HTML to the user\u2019s browser.  </li> </ol> <p>Example: Suppose a page displays the current time using Classic ASP. The server dynamically inserts the current timestamp into the HTML before sending it to the user.</p> <p>Here\u2019s a code snippet:  </p> <pre><code>&lt;%\n  Dim currentTime\n  currentTime = Time() ' Fetches the current server time\n%&gt;\n&lt;html&gt;\n  &lt;body&gt;\n    &lt;h1&gt;Welcome to Classic ASP!&lt;/h1&gt;\n    &lt;p&gt;The current time is: &lt;%=currentTime%&gt;&lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Upon execution, the <code>&lt;%=currentTime%&gt;</code> placeholder is replaced by the server with the current time (e.g., <code>12:45 PM</code>), which is then sent as plain HTML to the client.</p>"},{"location":"ASP/#key-features-in-classic-asp","title":"Key Features in Classic ASP","text":""},{"location":"ASP/#1-mix-of-html-and-scripts","title":"1. Mix of HTML and Scripts","text":"<p>Classic ASP allows embedding server-side scripting (VBScript or JScript) directly within HTML. Example: Responding to user input </p> <pre><code>&lt;%\n  Dim userName\n  userName = Request.QueryString(\"name\") ' Reads the value of \"name\" parameter from the URL\n%&gt;\n&lt;html&gt;\n  &lt;body&gt;\n    &lt;h1&gt;Hello, &lt;%=userName%&gt;!&lt;/h1&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>If accessed via <code>http://example.com/welcome.asp?name=John</code>, the output will be: \u201cHello, John!\u201d</p>"},{"location":"ASP/#2-built-in-objects-in-asp","title":"2. Built-in Objects in ASP","text":"<p>Classic ASP provides six built-in objects to simplify development:  </p> Object Purpose Request Accesses user inputs (e.g., forms, query strings, cookies). Response Controlling server output to the client (e.g., write content). Session Stores temporary data for a single user session. Application Stores persistent data shared across all sessions for the application. Server Calls server-side operations or utilities (e.g., encode strings). ObjectContext Manages transactions (often in enterprise apps). <p>Example of Session and Application usage:  </p> <pre><code>&lt;%\n  ' Session example\n  Session(\"username\") = \"JohnDoe\"\n  Response.Write(\"Welcome, \" &amp; Session(\"username\"))\n\n  ' Application example\n  Application(\"visits\") = Application(\"visits\") + 1\n  Response.Write(\"Total site visits: \" &amp; Application(\"visits\"))\n%&gt;\n</code></pre>"},{"location":"ASP/#3-database-integration-with-ado","title":"3. Database Integration with ADO","text":"<p>ASP allowed revolutionary flexibility by connecting to databases via ADO. Imagine pulling a user\u2019s profile dynamically from a SQL database:  </p> <pre><code>&lt;%\n  Dim conn, rs, sql\n  Set conn = Server.CreateObject(\"ADODB.Connection\")\n  conn.Open \"Provider=SQLOLEDB; Data Source=SERVER_NAME; Initial Catalog=myDatabase; User ID=username; Password=password;\"\n\n  sql = \"SELECT * FROM Users WHERE UserID = 1\"\n  Set rs = conn.Execute(sql)\n\n  If Not rs.EOF Then\n      Response.Write(\"User Name: \" &amp; rs(\"Name\"))\n  End If\n\n  rs.Close\n  conn.Close\n%&gt;\n</code></pre> <p>This code connects to <code>myDatabase</code>, fetches data, and displays it on the webpage.</p>"},{"location":"ASP/#advantages-of-classic-asp","title":"Advantages of Classic ASP","text":"<ol> <li>Simplicity: It is easy to learn, especially with its VBScript baseline\u2014great for beginners.  </li> <li>Server-Side Execution: Lightens the client-side processing load by resolving logic on the server.  </li> <li>Database Support: Works seamlessly with various databases, especially SQL Server and Access.  </li> <li>Wide Adoption in Legacy Apps: Many older enterprise applications still run on ASP, making it important for maintenance.  </li> </ol>"},{"location":"ASP/#real-life-use-case-a-legacy-support-scenario","title":"Real-Life Use Case: A Legacy Support Scenario","text":"<p>Imagine a company running a customer management system built in 2000 on Classic ASP. The system processes customer orders, and while outdated, is still critical to operations.  </p> <p>Modernizing the system might require rewriting the codebase entirely into ASP.NET or other platforms. For many businesses, understanding the Classic ASP code and adding minimal updates can keep the system functional until a complete migration is feasible.</p>"},{"location":"ASP/#downsides-and-transition-to-aspnet","title":"Downsides and Transition to ASP.NET","text":"<p>Classic ASP is no longer actively developed, and support is waning with modern server architectures. Here are notable limitations:</p> <ol> <li>Not Object-Oriented: Scripts are function-based, lacking the modularity of modern OOP practices.  </li> <li>Scalability Issues: Large-scale apps struggle with performance.  </li> <li>Security Vulnerabilities: Outdated platforms tend to accumulate critical vulnerabilities over time.  </li> <li>Harder Maintenance: Code becomes harder to manage in large applications.  </li> </ol> <p>ASP.NET was introduced in 2002 as a replacement, offering better performance, object-oriented programming through languages like C#, and a robust ecosystem.</p>"},{"location":"ASP/#summary","title":"Summary","text":"<p>Classic ASP played a pivotal role in transitioning from static HTML sites to dynamic, interactive web applications. While modern development has moved to sophisticated platforms like ASP.NET Core, a grasp of ASP is invaluable for legacy application maintenance and historical understanding of Microsoft\u2019s web development evolution.  </p> <p>Remember: Classic ASP may be a relic, but like an old engine, it still powers many essential tools today!</p>"},{"location":"ASP/#references","title":"References","text":"<p>Here are the top resources consulted for this blog: 1. Introduction to ASP on Microsoft Learn 2. Classic ASP Built-in Object Reference 3. Database Access in ASP 4. Comparison of ASP and ASP.NET 5. Maintaining Legacy ASP Applications </p> <p>Remember: While ASP may no longer be the first choice for development, understanding its structure can prepare you for working with its successor platforms!</p>"},{"location":"AZURE_BLOB_STORAGE/","title":"Complete Guide to Azure Blob Storage: Store Data Seamlessly","text":"<p>Tagline: \"Cloud storage made simple, scalable, and secure with Azure Blob Storage.\"</p>"},{"location":"AZURE_BLOB_STORAGE/#understanding-azure-blob-storage","title":"Understanding Azure Blob Storage","text":"<p>Azure Blob Storage is Microsoft\u2019s cloud storage solution that allows you to store and manage large volumes of unstructured data such as text or binary content. Blob stands for \"Binary Large Objects\", making it a go-to service for storing images, videos, backups, documents, and more in the cloud. Whether you\u2019re a startup or an enterprise, Azure Blob Storage gives you immense scalability, durability, and accessibility through its global presence.  </p>"},{"location":"AZURE_BLOB_STORAGE/#when-should-you-use-azure-blob-storage","title":"When Should You Use Azure Blob Storage?","text":"<p>Azure Blob Storage comes into play whenever you need: - To store, retrieve, or process large media files. - Scalable and elastic storage to handle unpredictable workloads. - A storage solution for persisting application logs, backups, or archives. - A data lake with analytical integration.  </p> <p>Here\u2019s a relatable example: Think of a streaming service like Netflix that needs to store thousands of movies and videos to provide seamless access to its users. Azure Blob Storage lets you store massive libraries securely, serve content globally with high availability, and scale as the content demand grows.  </p>"},{"location":"AZURE_BLOB_STORAGE/#key-features-of-azure-blob-storage","title":"Key Features of Azure Blob Storage","text":""},{"location":"AZURE_BLOB_STORAGE/#1-types-of-blobs","title":"1. Types of Blobs","text":"<p>Azure Blob Storage offers three blob types catered to different use cases: - Block Blobs: Ideal for storing text or binary files like documents, images, or videos. Block blobs are the go-to solution for most unstructured data scenarios. - Append Blobs: Used primarily for log files or other append-only operations as they allow efficient appending of data. - Page Blobs: Used for random read and write operations, suitable for virtual hard disks and other IaaS scenarios.  </p> <p>Example: Storing user images in a social media platform? Use Block Blobs. Keeping a log of real-time transactions for later analysis? Try Append Blobs. Virtual machine operating system disks? Use Page Blobs.</p>"},{"location":"AZURE_BLOB_STORAGE/#2-tiers-for-cost-optimization","title":"2. Tiers for Cost Optimization","text":"<p>Azure Blob Storage operates on a pay-as-you-go model, allowing you to choose cost-efficient access tiers based on your data needs: - Hot Tier: For frequently accessed data. Ideal for live apps or streaming content. - Cool Tier: For infrequent access but with fast retrieval requirements. Think monthly archives. - Archive Tier: For long-term, rarely accessed data such as regulatory backups.  </p> <p>Tip: Your company may need daily access to high-demand analytics reports but must also retain past year\u2019s data for auditing. Store the current year\u2019s data in the Hot Tier while moving historical data into the Archive Tier to save costs.  </p>"},{"location":"AZURE_BLOB_STORAGE/#3-access-management-and-security","title":"3. Access Management and Security","text":"<p>Azure Blob Storage integrates with Azure Active Directory (Azure AD) and Shared Access Signatures (SAS) to ensure fine-grained control over access permissions. You can grant time-limited or policy-based access to resources.</p> <p>Example for SAS Token: Suppose you are running an e-commerce platform, and you want a vendor to upload their new product images to your blob storage. Generate a time-limited SAS token for that specific upload folder.  </p> <p>Here\u2019s how you can generate a SAS code snippet:  </p> <pre><code>var sas = blobContainer.GenerateSharedAccessSignature(\n    new SharedAccessBlobPolicy\n    {\n        SharedAccessExpiryTime = DateTimeOffset.UtcNow.AddHours(1),\n        Permissions = SharedAccessBlobPermissions.Write\n    });\nConsole.WriteLine($\"SAS Token: {sas}\");\n</code></pre>"},{"location":"AZURE_BLOB_STORAGE/#4-global-scalability-and-data-redundancy","title":"4. Global Scalability and Data Redundancy","text":"<p>Azure Blob Storage supports geo-redundancy, providing users with built-in data backup options. Depending on your requirements, data can be replicated: - Locally (LRS): Within the same data center. - Zone-wise (ZRS): Across availability zones in a region. - Geo-redundant (GRS): Across two regions for disaster recovery.  </p> <p>Example: If your business operates in Europe, you could ensure your backup is geo-replicated to a secondary pair like North Europe in case of any regional failures.  </p>"},{"location":"AZURE_BLOB_STORAGE/#5-integration-with-other-azure-services","title":"5. Integration with Other Azure Services","text":"<p>Azure Blob Storage seamlessly integrates with Azure services like Azure Data Factory, Logic Apps, Azure Functions, and more. The integration enables workflows like data ingestion, transformation, or machine learning.  </p> <p>Imagine building a data pipeline\u2014the raw data is stored in a blob, then ingested into a data warehouse via Azure Data Factory, and finally analyzed for insights.</p>"},{"location":"AZURE_BLOB_STORAGE/#how-to-use-azure-blob-storage-getting-started","title":"How to Use Azure Blob Storage: Getting Started","text":""},{"location":"AZURE_BLOB_STORAGE/#step-1-create-a-storage-account","title":"Step 1: Create a Storage Account","text":"<ol> <li>Go to the Azure portal (https://portal.azure.com).  </li> <li>Click on Create a resource &gt; Storage &gt; Storage account.  </li> <li>Configure your storage account settings\u2014choose redundancy (LRS/GRS), access tier, and other options.  </li> </ol>"},{"location":"AZURE_BLOB_STORAGE/#step-2-create-a-blob-container","title":"Step 2: Create a Blob Container","text":"<ul> <li>In your storage account, click Containers under Data Storage.  </li> <li>Click on + Container to create a container where the blobs reside.  </li> <li>Define a unique name and set public access level (Private or Blob).  </li> </ul>"},{"location":"AZURE_BLOB_STORAGE/#step-3-upload-data-using-the-azure-portal","title":"Step 3: Upload Data Using the Azure Portal","text":"<ul> <li>After creating a container, click Upload and browse your local files to upload.  </li> </ul>"},{"location":"AZURE_BLOB_STORAGE/#step-4-access-your-blob-programmatically","title":"Step 4: Access Your Blob Programmatically","text":"<p>Here\u2019s a sample Python script using Azure SDK for downloading blobs:  </p> <pre><code>from azure.storage.blob import BlobServiceClient\n\nconnection_string = \"&lt;Your_Connection_String&gt;\"\nblob_service_client = BlobServiceClient.from_connection_string(connection_string)\n\n# Define container and blob\ncontainer_name = \"my-container\"\nblob_name = \"example.txt\"\n\n# Download Blob\nblob_client = blob_service_client.get_blob_client(container=container_name, blob=blob_name)\nwith open(\"downloaded_example.txt\", \"wb\") as download_file:\n    download_file.write(blob_client.download_blob().readall())\nprint(f\"Blob {blob_name} downloaded successfully!\")\n</code></pre>"},{"location":"AZURE_BLOB_STORAGE/#real-world-use-case-simplified-hyperlocal-food-delivery","title":"Real-World Use Case: Simplified Hyperlocal Food Delivery!","text":"<p>Picture this: A local food aggregator app, \"TasteNearby,\" uses Azure Blob Storage to host: 1. Restaurant images (block blobs). 2. Customer order receipts (append blobs). 3. Backup restaurant menus for yearly reviews (archive tier).  </p> <p>Azure Blob Storage ensures all this data is cost-efficiently and securely managed while helping \"TasteNearby\" scale as their popularity grows!  </p>"},{"location":"AZURE_BLOB_STORAGE/#advantages-of-using-azure-blob-storage","title":"Advantages of Using Azure Blob Storage","text":"<ul> <li>Scalability: Store petabytes of data with dynamic scaling to accommodate peaks in demand.  </li> <li>Highly Durable: Up to 99.999999999% (11 9s) durability with redundancy.  </li> <li>Seamless Access: REST APIs, SDKs, and integration with Azure tools make access effortless.  </li> <li>Cost-Effectiveness: Flexible tiers optimize costs for use cases ranging from frequent access to archival.  </li> </ul>"},{"location":"AZURE_BLOB_STORAGE/#conclusion","title":"Conclusion","text":"<p>Azure Blob Storage provides a powerful, affordable, and secure way to store unstructured data at scale. Whether you\u2019re a startup looking to store user-generated content or a large organization retaining decades of enterprise records, Blob Storage offers versatile, easy-to-manage features tailored to your needs.  </p> <p>By leveraging features like access tiers, redundancy options, and seamless integration with other Azure services, you can unlock new possibilities for cloud storage while staying cost-efficient and compliant with data security standards.  </p> <p>Start your journey today and modernize your storage strategy with Azure Blob Storage!</p>"},{"location":"AZURE_BLOB_STORAGE/#resources","title":"Resources:","text":"<ol> <li>Official Azure Blob Storage Documentation </li> <li>How to Secure Azure Blob Storage </li> <li>Azure Blob Storage Cost Management </li> <li>Using Azure SDK for Blob Storage </li> <li>Data Redundancy in Azure Storage </li> </ol>"},{"location":"Azure_Data_Lake_Storage/","title":"Azure Data Lake Storage: Building the Foundation for Big Data Analytics","text":"<p>Tagline: Scalability, performance, and security for your data-driven world  </p>"},{"location":"Azure_Data_Lake_Storage/#introduction-to-azure-data-lake-storage","title":"Introduction to Azure Data Lake Storage","text":"<p>In a world where data powers decisions, businesses are producing massive amounts of unstructured, structured, and semi-structured data. Handling vast datasets requires solutions that are scalable, secure, and performance-oriented. Microsoft Azure Data Lake Storage (ADLS) provides exactly that, empowering organizations to turn their data into actionable insights.  </p> <p>Azure Data Lake Storage is a cloud-based storage service optimized for big data analytics workloads. It provides a scalable and cost-effective solution to process petabytes of data and integrates seamlessly with analytics services like Azure Synapse, Azure Databricks, and Hadoop.  </p> <p>Let\u2019s dive deeper to understand the features, benefits, and use cases of Azure Data Lake Storage, complete with examples.  </p>"},{"location":"Azure_Data_Lake_Storage/#key-features-of-azure-data-lake-storage","title":"Key Features of Azure Data Lake Storage","text":""},{"location":"Azure_Data_Lake_Storage/#1-massive-scalability","title":"1. Massive Scalability","text":"<p>Azure Data Lake Storage supports enormous data volumes, making it suitable for big data analytics. Businesses handling terabytes or petabytes of data, such as retail giants analyzing customer purchase trends, can rely on ADLS without worrying about capacity constraints.  </p> <p>Example: A logistics company stores data from its IoT-enabled devices (tracking real-time shipments globally). They utilize ADLS to handle this data, which grows exponentially each day.  </p>"},{"location":"Azure_Data_Lake_Storage/#2-hierarchical-namespace","title":"2. Hierarchical Namespace","text":"<p>Azure Data Lake Storage Gen2 provides a hierarchical namespace, enabling efficient directory-based operations on data stored in folders. This contrasts with traditional flat namespaces in blob storage.  </p> <p>Real-life Scenario: Consider you\u2019re managing a media company storing terabytes of video files categorized by year, region, and language. A hierarchical structure allows you to organize data intuitively and retrieve it more efficiently.  </p> <pre><code># Example: Using Azure CLI to create directories in ADLS Gen2\naz storage fs directory create \\\n  --account-name &lt;your-storage-account&gt; \\\n  --file-system my-container \\\n  --name \"media/2023/region-USA\"\n</code></pre>"},{"location":"Azure_Data_Lake_Storage/#3-integration-with-analytics-ecosystem","title":"3. Integration with Analytics Ecosystem","text":"<p>Azure Data Lake Storage integrates with tools like Azure Synapse Analytics, Azure Databricks, HDInsight, Spark, and more. This makes it easy to perform complex queries, machine learning, or AI on the stored data.  </p> <p>Example: A financial institution loads customer transaction data into ADLS and connects it to Azure Databricks for fraud detection analysis using machine learning.  </p>"},{"location":"Azure_Data_Lake_Storage/#4-cost-effective-pricing-models","title":"4. Cost-Effective Pricing Models","text":"<p>ADLS has tiered pricing models (hot, cool, and archive storage), allowing organizations to optimize costs based on data access frequency.  </p> <p>In practice: Frequently accessed financial reports are stored in the Hot tier, while year-end archival data is shifted to the Archive tier to save costs.  </p>"},{"location":"Azure_Data_Lake_Storage/#5-enterprise-grade-security","title":"5. Enterprise-Grade Security","text":"<p>Azure Data Lake Storage provides advanced security features like Azure Active Directory (AAD) integration, secure data transfers, encryption (at rest and in transit), and access controls.  </p> <pre><code># Example JSON policy for limiting permissions\n{\n  \"Name\": \"LimitAccessToFinanceData\",\n  \"Permissions\": [\n    {\n      \"Action\": \"Read\",\n      \"Scope\": \"FinanceReports\",\n      \"UserGroup\": \"FinanceUsers\"\n    }\n  ]\n}\n</code></pre> <p>Scenario: A health-care provider safeguards sensitive patient records with tight access controls, ensuring the data is only accessible to authorized personnel.  </p>"},{"location":"Azure_Data_Lake_Storage/#setting-up-azure-data-lake-storage","title":"Setting Up Azure Data Lake Storage","text":""},{"location":"Azure_Data_Lake_Storage/#step-1-create-an-azure-storage-account","title":"Step 1: Create an Azure Storage Account","text":"<ol> <li>Log in to your Azure portal.  </li> <li>Go to Storage Accounts, then Create a new account.  </li> <li>Select \"Enable hierarchical namespace\" for ADLS Gen2 features.  </li> </ol>"},{"location":"Azure_Data_Lake_Storage/#step-2-create-a-file-system-container","title":"Step 2: Create a File System (Container)","text":"<p>A file system acts as the top-level container where all your files and directories reside. Use Azure CLI or portal for this:  </p> <pre><code># Creating a file system on Azure Data Lake Storage\naz storage fs create \\\n  --account-name &lt;your-storage-account&gt; \\\n  --name my-container\n</code></pre>"},{"location":"Azure_Data_Lake_Storage/#step-3-load-data","title":"Step 3: Load Data","text":"<p>Use tools like Azure Data Factory, AzCopy, or Azure CLI to ingest data into ADLS.  </p> <pre><code># Uploading a file from local to ADLS\naz storage blob upload \\\n  --account-name &lt;your-storage-account&gt; \\\n  --container-name my-container \\\n  --file ./local_file.csv \\\n  --name sample-data.csv\n</code></pre>"},{"location":"Azure_Data_Lake_Storage/#step-4-access-data-for-analysis","title":"Step 4: Access Data for Analysis","text":"<p>Using integrated services like Azure Synapse or Databricks, query and process data:  </p> <pre><code># Example: Loading data for analysis in Azure Databricks\ndf = spark.read.format(\"csv\").option(\"header\", \"true\") \\\n     .load(\"abfss://my-container@&lt;storage-account&gt;.dfs.core.windows.net/filepath.csv\")\ndf.show()\n</code></pre>"},{"location":"Azure_Data_Lake_Storage/#real-world-use-cases-of-azure-data-lake-storage","title":"Real-World Use Cases of Azure Data Lake Storage","text":""},{"location":"Azure_Data_Lake_Storage/#1-retail-industry-personalized-marketing","title":"1. Retail Industry: Personalized Marketing","text":"<p>ADLS enables retail companies to analyze shopping behaviors across regions. For example, by analyzing ad clicks, purchase histories, and demographic data, retail chains can create personalized promotions for customers.  </p>"},{"location":"Azure_Data_Lake_Storage/#2-healthcare-genomic-data-analysis","title":"2. Healthcare: Genomic Data Analysis","text":"<p>Hospitals and research institutions store and analyze massive genomic datasets in secure and scalable environments. Azure Data Lake Storage ensures compliance with data privacy laws like HIPAA and GDPR while providing cost-efficient long-term storage solutions.  </p>"},{"location":"Azure_Data_Lake_Storage/#3-banking-fraud-detection","title":"3. Banking: Fraud Detection","text":"<p>Banks monitor millions of daily transactions to flag anomalies. By integrating ADLS with machine learning tools, financial institutions detect and mitigate potential fraud in real-time.  </p>"},{"location":"Azure_Data_Lake_Storage/#benefits-of-choosing-azure-data-lake-storage","title":"Benefits of Choosing Azure Data Lake Storage","text":"<ol> <li>Scalable to Petabytes: ADLS scales with your needs, ensuring you don\u2019t face performance bottlenecks.  </li> <li>Cost Optimization: Tiered pricing helps manage storage costs while ensuring accessibility.  </li> <li>Improved Performance: Built on Azure Blob Storage, ADLS optimizes analytics workloads with its hierarchical namespace.  </li> <li>Enhanced Security: Enterprise-grade security features, including flexible role-based access controls and encryption.  </li> <li>Seamless Integration: Connect easily with Azure-native tools (e.g., Synapse, Databricks) for end-to-end data analytics workflows.  </li> </ol>"},{"location":"Azure_Data_Lake_Storage/#common-pitfalls-considerations","title":"Common Pitfalls &amp; Considerations","text":"<ul> <li>Choosing the Wrong Storage Tier: Be mindful of selecting storage tiers (Hot, Cool, Archive) to avoid unnecessary costs.  </li> <li>Access Control Mismanagement: Ensure strict policies are enforced to limit unauthorized access to critical data.  </li> <li>Migration Challenges: Migrating on-premises big data to Azure may require specialized strategies, such as using Azure Data Factory for efficient ETL.  </li> </ul>"},{"location":"Azure_Data_Lake_Storage/#conclusion","title":"Conclusion","text":"<p>Azure Data Lake Storage is a powerful, flexible, and cost-efficient solution designed to meet the needs of modern businesses relying on big data analytics. Whether you\u2019re a healthcare provider processing medical records, a retailer optimizing marketing efforts, or a financial institution analyzing transaction data, ADLS provides the scalability and reliability to unlock the potential of your data.  </p> <p>By coupling ADLS with analytics tools, organizations are pushing the boundaries of innovation and data-driven decision-making. So, why not take the first step toward transforming your data strategy with Azure Data Lake Storage?    </p>"},{"location":"Azure_Data_Lake_Storage/#useful-resources","title":"Useful Resources","text":"<p>Here are some official Microsoft resources to help you get started:  </p> <ol> <li>Azure Data Lake Storage Documentation </li> <li>Azure Storage Pricing </li> <li>Quickstart: Set Up Azure Data Lake Gen2 </li> <li>Azure Data Lake Storage vs. Blob Storage </li> <li>Hierarchical Namespace in ADLS Gen2 </li> </ol> <p>Let your data shine with Azure Data Lake Storage! \ud83d\ude80  </p>"},{"location":"Microsoft_Purview/","title":"Microsoft Purview: Simplifying Data Governance in a Complex World","text":"<p>Tagline: Empowering organizations with modern data governance to maximize the value of their data estate.</p> <p>Microsoft Purview is a unified data governance platform that enables businesses to discover, manage, and safeguard their data assets. With the sheer growth of data in today\u2019s organizations, managing data governance can be challenging. Microsoft Purview provides tools to centralize and streamline this process while fostering compliance and productivity across the data lifecycle.</p> <p>Let\u2019s dive into what Microsoft Purview is, its key features, and how it can transform the way businesses handle their data estate.</p>"},{"location":"Microsoft_Purview/#what-is-microsoft-purview","title":"What is Microsoft Purview?","text":"<p>Microsoft Purview is a comprehensive suite of solutions designed to help businesses manage their data governance and compliance. Formerly known as Azure Purview, it goes beyond traditional governance solutions by integrating closely with Microsoft 365 and Azure ecosystems, along with other third-party tools and environments, to provide end-to-end visibility and control.</p> <p>Whether you\u2019re a business managing sensitive data, ensuring compliance with regulations like GDPR, or trying to extract insights from a vast data landscape, Microsoft Purview has something to offer.</p>"},{"location":"Microsoft_Purview/#key-features-of-microsoft-purview","title":"Key Features of Microsoft Purview","text":""},{"location":"Microsoft_Purview/#1-data-discovery-and-classification","title":"1. Data Discovery and Classification","text":"<p>Understanding where your data resides and what type of information it holds is the cornerstone of governance. Microsoft Purview provides robust data discovery capabilities by scanning your entire data estate, both on-premises and in the cloud. </p>"},{"location":"Microsoft_Purview/#example-classifying-sensitive-data","title":"Example: Classifying Sensitive Data","text":"<p>Imagine a financial institution that processes mountains of customer data daily. Purview can scan your datasets and classify Personally Identifiable Information (PII), such as credit card numbers or Social Security numbers. </p> <pre><code>{\n  \"DataDetail\": \"Customer Data\",\n  \"Category\": \"Sensitive\",\n  \"Tags\": [\"PII\", \"CreditCard\", \"Compliance\"],\n  \"Properties\": {\n    \"Owner\": \"Finance Team\",\n    \"RetentionPolicy\": \"3 Years\"\n  }\n}\n</code></pre> <p>The above classification ensures your organization knows where sensitive data resides and can implement the appropriate measures to protect it.</p>"},{"location":"Microsoft_Purview/#2-unified-data-lineage","title":"2. Unified Data Lineage","text":"<p>Tracing the origin and flow of data is essential for transparency. Data lineage in Purview provides a visual map showing how data moves across your environment. This highlights dependencies and transformations, helping stakeholders trust the data.</p>"},{"location":"Microsoft_Purview/#real-life-scenario","title":"Real-Life Scenario:","text":"<p>A pharmaceutical company developing a new drug needs to comply with strict regulatory standards. Using Purview's data lineage feature, they can answer critical compliance questions such as: - Where did this set of patient trial data originate? - How was the data transformed during analysis?</p> <p>By having a clear lineage, organizations can enhance accountability and trust across teams.</p>"},{"location":"Microsoft_Purview/#3-end-to-end-data-governance-and-compliance","title":"3. End-to-End Data Governance and Compliance","text":"<p>Purview automates compliance efforts by providing insights into regulatory requirements and adherence. It supports frameworks like GDPR, HIPAA, and CCPA, among others.</p>"},{"location":"Microsoft_Purview/#code-snippet-setting-up-compliance-scans-for-azure-storage","title":"Code Snippet: Setting Up Compliance Scans for Azure Storage","text":"<pre><code># Example: Automating data scanning in Azure storage\nImport-Module Az.Purview\n\n$PurviewAccount = \"YourPurviewAccountName\"\n$ScanName = \"GDPRCompliance\"\n\n# Schedule a compliance scan\nStart-AzPurviewScan -AccountName $PurviewAccount `\n                    -ScanName $ScanName `\n                    -Recurrence \"Weekly\"\n</code></pre> <p>With such capabilities, global enterprises can ensure their policies are automatically enforcing compliance with minimal manual intervention.</p>"},{"location":"Microsoft_Purview/#4-microsoft-365-integration","title":"4. Microsoft 365 Integration","text":"<p>Microsoft Purview seamlessly combines data governance with the tools employees already use, such as Word, Excel, and Teams. This integration allows users to classify documents, emails, and other records without disrupting productivity.</p>"},{"location":"Microsoft_Purview/#example-in-action","title":"Example in Action:","text":"<p>An HR team shares employee performance reviews via Teams. Purview can automatically label these documents as confidential, restricting access to unauthorized participants.</p> <ul> <li>Step 1: Purview flags sensitive content.</li> <li>Step 2: Automated policies block sharing or require approval.</li> <li>Step 3: Logs are maintained for audit trails.</li> </ul>"},{"location":"Microsoft_Purview/#5-purpose-built-governance-portal","title":"5. Purpose-Built Governance Portal","text":"<p>The consolidated Purview governance portal offers a single location for managing all aspects of data governance, from data scanning and classification to monitoring compliance risks.</p>"},{"location":"Microsoft_Purview/#benefits-of-microsoft-purview","title":"Benefits of Microsoft Purview","text":""},{"location":"Microsoft_Purview/#a-improved-decision-making","title":"a) Improved Decision-Making","text":"<p>With a unified platform to view and govern data, organizations can extract valuable insights faster and with more confidence.</p>"},{"location":"Microsoft_Purview/#b-enhanced-security","title":"b) Enhanced Security","text":"<p>By automating the identification of sensitive data and applying controls, businesses significantly reduce the risk of data breaches.</p>"},{"location":"Microsoft_Purview/#c-regulatory-compliance","title":"c) Regulatory Compliance","text":"<p>With out-of-the-box policies and scan templates, Purview takes the complexity out of staying compliant in heavily regulated industries.</p>"},{"location":"Microsoft_Purview/#d-scalability-across-environments","title":"d) Scalability Across Environments","text":"<p>From Azure, AWS, Google Cloud, to on-premises systems, Microsoft Purview helps govern data wherever it resides.</p>"},{"location":"Microsoft_Purview/#getting-started-with-microsoft-purview","title":"Getting Started with Microsoft Purview","text":"<ol> <li> <p>Set Up Purview Account:    Sign up for Microsoft Purview in the Azure portal and configure your data sources.</p> </li> <li> <p>Scan Data Sources:    Use the scanning functionality to collect metadata and classify data across your systems.</p> </li> <li> <p>Analyze and Govern:    Leverage features like data lineage, labeling, and compliance dashboards to manage your data estate effectively.</p> </li> <li> <p>Automate Policies:    Define and enforce organizational policies for data handling, access, and retention.</p> </li> </ol>"},{"location":"Microsoft_Purview/#final-thoughts","title":"Final Thoughts","text":"<p>Microsoft Purview is much more than a governance tool\u2014it\u2019s a platform that fosters reliability, scalability, and compliance at every step of your data management journey. Whether you're a small business or a global enterprise, this tool empowers you to understand your data better and make informed decisions with confidence.</p>"},{"location":"Microsoft_Purview/#links-to-resources","title":"Links to Resources:","text":"<ol> <li>Microsoft Purview Overview</li> <li>Microsoft Purview Data Governance Documentation</li> <li>Compliance in Microsoft Purview</li> <li>Microsoft Purview Start Guide</li> <li>Data Classification in Microsoft Purview</li> </ol> <p>Embrace Microsoft Purview today and begin the transformation toward a well-governed and secure data estate!</p>"},{"location":"Nodejs/","title":"Unlocking the Power of Node.js: A Deep Dive into Event-Driven JavaScript on the Server-Side","text":"<p>Tagline: \"Say hello to asynchronous operations, scalability, and blazing-fast performance with Node.js!\"</p> <p>Node.js has revolutionized server-side application development. Whether you're building a real-time chat platform, an API, or a highly scalable web application, Node.js often comes up as the go-to technology. But what makes it special? Let\u2019s dive in and explore its components, uses, real-life examples, and practical insights for developers.</p>"},{"location":"Nodejs/#what-is-nodejs","title":"What Is Node.js?","text":"<p>Node.js is an open-source, cross-platform runtime environment that allows developers to execute JavaScript code outside a web browser. Built on Chrome\u2019s V8 JavaScript engine, it provides a way to build server-side applications using JavaScript, which was traditionally a client-side scripting language.</p> <p>One of Node.js's defining features is its non-blocking I/O, making it ideal for scenarios where efficiency and scalability are paramount.</p>"},{"location":"Nodejs/#why-nodejs-key-features-at-a-glance","title":"Why Node.js? Key Features at a Glance","text":"<p>Node.js stands out for several reasons. Here are its key features:</p> <ol> <li> <p>Event-Driven Architecture:    Node.js uses an event-driven, asynchronous framework, meaning the runtime efficiently handles a large number of connections simultaneously.</p> </li> <li> <p>Non-Blocking I/O:    Blocking I/O operations often lag server performance. Node.js runs I/O calls asynchronously, allowing for faster execution and scalable processes.</p> </li> <li> <p>Fast Runtime:    Using Google\u2019s V8 engine, Node.js translates JavaScript into machine code at lightning speed.</p> </li> <li> <p>NPM (Node Package Manager):    With over one million packages, NPM is one of the largest ecosystems of open-source libraries, simplifying and accelerating development.</p> </li> </ol>"},{"location":"Nodejs/#exploring-nodejs-in-action-real-life-use-cases","title":"Exploring Node.js in Action: Real-Life Use Cases","text":"<p>To fully appreciate the power of Node.js, consider these real-world examples:</p>"},{"location":"Nodejs/#1-real-time-chat-applications","title":"1. Real-Time Chat Applications","text":"<p>Node.js is perfect for chat apps where real-time communication is a must. Its WebSocket libraries provide a two-way communication channel between the server and the client.</p> <p>Example:</p> <pre><code>const WebSocket = require('ws');\n\nconst server = new WebSocket.Server({ port: 8080 });\n\nserver.on('connection', (ws) =&gt; {\n  console.log('A new client connected!');\n  ws.send('Welcome to the chat!');\n\n  ws.on('message', (message) =&gt; {\n    console.log('Received:', message);\n    ws.send(`You said: ${message}`);\n  });\n});\n</code></pre> <p>This is how effortlessly Node.js handles real-time messaging for applications such as Slack or Microsoft Teams.</p>"},{"location":"Nodejs/#2-apis-for-data-intensive-operations","title":"2. APIs for Data-Intensive Operations","text":"<p>APIs for platforms like Netflix and LinkedIn are written using Node.js to handle large volumes of requests. Its asynchronous nature ensures low latency and high throughput.</p> <p>Example: Building a simple RESTful API</p> <pre><code>const express = require('express');\nconst app = express();\n\napp.get('/users', (req, res) =&gt; {\n  res.json({ name: 'John Doe', age: 30 });\n});\n\napp.listen(3000, () =&gt; {\n  console.log('Server is running on http://localhost:3000');\n});\n</code></pre> <p>Tools such as Express.js (a lightweight framework) enhance the ease of creating stable and reliable APIs.</p>"},{"location":"Nodejs/#3-streaming-applications","title":"3. Streaming Applications","text":"<p>Node.js can handle large files by processing it piece-by-piece rather than reading the complete file into memory. This capability makes Node.js an excellent choice for video and audio streaming services.</p> <p>Example: Streaming a file</p> <pre><code>const fs = require('fs');\nconst http = require('http');\n\nhttp.createServer((req, res) =&gt; {\n  const stream = fs.createReadStream('video.mp4');\n  res.writeHead(200, { 'Content-Type': 'video/mp4' });\n  stream.pipe(res);\n}).listen(8000, () =&gt; {\n  console.log('Streaming on http://localhost:8000');\n});\n</code></pre> <p>Platforms like Netflix and YouTube utilize similar principles for seamless media streaming.</p>"},{"location":"Nodejs/#core-concepts-of-nodejs","title":"Core Concepts of Node.js","text":"<p>To work effectively with Node.js, it\u2019s important to understand these core concepts:</p>"},{"location":"Nodejs/#1-event-loop","title":"1. Event Loop","text":"<p>Node.js operates on a single-threaded event loop for non-blocking I/O operations. The event loop allows Node.js to manage hundreds (or even thousands) of simultaneous connections using callbacks and promises.</p> <p>Cyclic Executions Workflow: - Event loop processes incoming requests. - Heavy tasks are offloaded (e.g., database queries or file reading). - When the results arrive, an event notifies the callback function to proceed.</p>"},{"location":"Nodejs/#2-asynchronous-programming-with-callbacks-promises-and-asyncawait","title":"2. Asynchronous Programming with Callbacks, Promises, and Async/Await","text":"<p>Node.js applications thrive on asynchronous programming. Here\u2019s an example using async/await:</p> <pre><code>const fs = require('fs').promises;\n\nasync function readFile() {\n  try {\n    const data = await fs.readFile('example.txt', 'utf8');\n    console.log(data);\n  } catch (err) {\n    console.error('Error reading file:', err);\n  }\n}\n\nreadFile();\n</code></pre> <p>Async/await is syntactic sugar for promises, making code cleaner and easier to read compared to callback chains.</p>"},{"location":"Nodejs/#how-big-players-leverage-nodejs","title":"How Big Players Leverage Node.js","text":"<p>Several industry giants rely on Node.js to power their platforms:</p> <ul> <li>Netflix: Reduces startup time by leveraging Node.js for its lightweight and scalable nature.</li> <li>PayPal: Used Node.js for rewriting its existing application, doubling user requests per second and reducing response time by 35%.</li> <li>Microsoft: Node.js is employed for Azure cloud products.</li> <li>Uber: Uses the event-driven architecture of Node.js for real-time tracking.</li> </ul>"},{"location":"Nodejs/#pros-and-cons-of-nodejs","title":"Pros and Cons of Node.js","text":""},{"location":"Nodejs/#pros","title":"Pros:","text":"<ul> <li>High Performance: Powered by V8 JavaScript engine.</li> <li>Scalability: Ideal for microservices and real-time apps.</li> <li>Large Ecosystem: NPM offers a myriad of packages.</li> </ul>"},{"location":"Nodejs/#cons","title":"Cons:","text":"<ul> <li>Single-Threaded Limitations: CPU-bound tasks can block the thread.</li> <li>Callback Hell: Complex async workflows can become difficult to manage without proper practices like promises or async/await.</li> <li>Not Ideal for Heavy Computation: CPU-intensive operations can impact performance.</li> </ul>"},{"location":"Nodejs/#getting-started-with-nodejs-installation-and-setup","title":"Getting Started with Node.js: Installation and Setup","text":""},{"location":"Nodejs/#1-install-nodejs","title":"1. Install Node.js","text":"<ul> <li>Go to the Node.js Official Download Page.</li> <li>Choose the LTS version (recommended for most users).</li> </ul>"},{"location":"Nodejs/#2-verify-installation","title":"2. Verify Installation:","text":"<p>Open your terminal and type:    <code>bash    node -v   # To check the installed Node.js version    npm -v    # To check the installed npm version</code></p>"},{"location":"Nodejs/#3-hello-world-in-nodejs","title":"3. Hello, World! in Node.js:","text":"<p>```javascript    const http = require('http');</p> <p>const server = http.createServer((req, res) =&gt; {      res.writeHead(200, { 'Content-Type': 'text/plain' });      res.end('Hello, World!\\n');    });</p> <p>server.listen(3000, () =&gt; {      console.log('Server running at http://localhost:3000/');    });    ```</p> <p>Run the file using <code>node filename.js</code> and visit <code>http://localhost:3000</code> on your browser.</p>"},{"location":"Nodejs/#conclusion-why-learn-nodejs","title":"Conclusion: Why Learn Node.js?","text":"<p>Node.js has cemented its position as a leading technology in server-side development. Its event-driven nature, asynchronous programming support, and scalability make it ideal for modern applications, whether it's a real-time chat, a RESTful API, or media streaming.</p> <p>By embracing Node.js and its ecosystem, developers can create secure, fast, and scalable applications to keep up with industry demands.</p> <p>Ready to get started? Download Node.js, start experimenting with some basic applications, and explore the vibrant ecosystem of libraries.</p>"},{"location":"Nodejs/#references","title":"References","text":"<ol> <li>Introduction to Node.js</li> <li>Node.js Events and Asynchronous Programming</li> <li>Getting Started with Express.js</li> <li>Best Practices for Working with Node.js</li> <li>Asynchronous Programming in Node.js</li> </ol> <p>Whether you're a beginner or an experienced programmer, Node.js has something unique to offer. Join the growing community, unleash the potential of JavaScript on the server, and take your development journey to the next level. Happy coding!</p>"},{"location":"React_JS/","title":"The Ultimate Guide to React.js: A Game Changer for Frontend Development","text":"<p>Tagline: Discover how React.js simplifies building dynamic and high-performance user interfaces.</p>"},{"location":"React_JS/#introduction-meet-reactjs","title":"Introduction: Meet React.js","text":"<p>React.js, often simply known as React, is an open-source JavaScript library maintained by Facebook. It allows developers to build fast, dynamic, and interactive user interfaces for web applications. With concepts like components, JSX, and the virtual DOM, React has completely revolutionized frontend development since its release in 2013.</p> <p>Whether you're updating a single button based on user interaction or re-rendering a dynamic dashboard with thousands of data points, React does the heavy lifting efficiently. Let\u2019s explore React from its core principles to code snippets, real-life examples, and everything in between.</p>"},{"location":"React_JS/#why-choose-reactjs","title":"Why Choose React.js?","text":"<p>React.js stands out due to its simplicity, flexibility, and robustness. Here are some reasons why it\u2019s one of the most popular JavaScript libraries today:</p> <ol> <li>Component-Based Architecture: React encourages breaking down a UI into reusable components. This approach allows faster development and easier maintenance of large codebases.</li> <li>Virtual DOM: React uses a virtual DOM, which minimizes updates to the real DOM. This leads to faster and more efficient rendering, giving users a seamless experience.</li> <li>Declarative UI: React allows developers to describe what the UI should look like for a particular state\u2014React takes care of updating the DOM for you.</li> <li>Rich Ecosystem: With tools like Redux, React Router, and Next.js, developers enjoy an end-to-end workflow.</li> <li>Community Support: React developers benefit from a vast ecosystem of libraries, tools, and an active global community.</li> </ol>"},{"location":"React_JS/#core-concepts-of-reactjs","title":"Core Concepts of React.js","text":""},{"location":"React_JS/#1-components-the-building-blocks","title":"1. Components: The Building Blocks","text":"<p>React applications are built using components. These are independent, reusable blocks of JavaScript code that represent parts of a user interface. Components can be functional or class-based.</p> <p>Here\u2019s a simple functional component example:</p> <pre><code>function Greeting(props) {\n  return &lt;h1&gt;Hello, {props.name}!&lt;/h1&gt;;\n}\n\n// Usage\n&lt;Greeting name=\"John\" /&gt;\n</code></pre> <p>Real-Life Example: Think of components as Lego blocks. Just like different Lego pieces create a large model, React components come together to form an application like Facebook\u2019s News Feed or Instagram Stories.</p>"},{"location":"React_JS/#2-jsx-javascript-xml","title":"2. JSX: JavaScript + XML","text":"<p>JSX is a syntax extension that looks similar to HTML but works seamlessly with JavaScript. It allows developers to write UI elements directly within JavaScript code.</p> <p>Here\u2019s an example:</p> <pre><code>const element = &lt;h1&gt;Welcome to React!&lt;/h1&gt;;\nReactDOM.render(element, document.getElementById('root'));\n</code></pre> <p>JSX simplifies writing and managing DOM elements and improves code readability.</p>"},{"location":"React_JS/#3-state-and-props","title":"3. State and Props","text":"<ul> <li>Props: Short for \"properties,\" these are used to pass data from one component to another. Props are read-only.</li> <li>State: State is the local data storage for components. Unlike props, state can be modified over time using the <code>setState</code> function (in class components) or the <code>useState</code> hook (in functional components).</li> </ul> <p>Example using <code>useState</code> in a functional component:</p> <pre><code>import React, { useState } from 'react';\n\nfunction Counter() {\n  const [count, setCount] = useState(0);\n\n  return (\n    &lt;div&gt;\n      &lt;p&gt;You clicked {count} times&lt;/p&gt;\n      &lt;button onClick={() =&gt; setCount(count + 1)}&gt;\n        Click me\n      &lt;/button&gt;\n    &lt;/div&gt;\n  );\n}\n</code></pre>"},{"location":"React_JS/#4-the-virtual-dom","title":"4. The Virtual DOM","text":"<p>React\u2019s implementation of the virtual DOM improves performance. When the state changes, React calculates the difference between the virtual DOM and the updated state, then minimal changes are applied to the real DOM.</p> <p>Real-Life Example: Imagine you're editing a Word document. Instead of printing a new page for every change, the software highlights only the changes you\u2019ve made. That\u2019s like the virtual DOM in React!</p>"},{"location":"React_JS/#reactjs-in-action-real-life-examples","title":"React.js in Action: Real-Life Examples","text":"<ol> <li> <p>E-Commerce Websites React is widely used in e-commerce platforms like Amazon. For instance, when a user selects a filter option (e.g., price range), only the relevant items are re-rendered dynamically without refreshing the entire page.</p> </li> <li> <p>Social Media Platforms React is the core library behind Facebook. Features like notifications, post updates, and live comments harness the capability of React's virtual DOM to maintain smooth performance.</p> </li> <li> <p>Dashboard Applications Imagine a real-time analytics dashboard displaying financial market data. With React, only updated metrics are rendered, ensuring optimized resource usage and faster updates.</p> </li> </ol>"},{"location":"React_JS/#advanced-features-in-reactjs","title":"Advanced Features in React.js","text":""},{"location":"React_JS/#1-react-hooks","title":"1. React Hooks","text":"<p>React introduced hooks from version 16.8. Hooks like <code>useState</code> and <code>useEffect</code> allow functional components to mimic the behavior of class components (e.g., managing state or lifecycle effects).</p> <p>Example: Fetching Data with Hooks:</p> <pre><code>import React, { useState, useEffect } from 'react';\n\nfunction DataFetcher() {\n  const [data, setData] = useState([]);\n\n  useEffect(() =&gt; {\n    fetch('https://api.example.com/data')\n      .then(response =&gt; response.json())\n      .then(data =&gt; setData(data));\n  }, []);\n\n  return (\n    &lt;ul&gt;\n      {data.map(item =&gt; (\n        &lt;li key={item.id}&gt;{item.name}&lt;/li&gt;\n      ))}\n    &lt;/ul&gt;\n  );\n}\n</code></pre>"},{"location":"React_JS/#2-react-router","title":"2. React Router","text":"<p>For building a multi-page application, developers can rely on React Router. It enables seamless navigation between views without a full reload.</p> <p>Example implementation:</p> <pre><code>import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    &lt;Router&gt;\n      &lt;Routes&gt;\n        &lt;Route path=\"/\" element={&lt;Home /&gt;} /&gt;\n        &lt;Route path=\"/about\" element={&lt;About /&gt;} /&gt;\n      &lt;/Routes&gt;\n    &lt;/Router&gt;\n  );\n}\n</code></pre>"},{"location":"React_JS/#3-server-side-rendering-ssr-with-nextjs","title":"3. Server-Side Rendering (SSR) with Next.js","text":"<p>React alone focuses on client-side rendering. To improve performance and SEO, frameworks like Next.js allow server-side rendering. For instance, a blog application implemented with SSR ensures quicker load times and better search engine visibility.</p>"},{"location":"React_JS/#how-to-get-started-with-reactjs","title":"How to Get Started with React.js","text":"<p>If you\u2019re excited to dive into React, here\u2019s how to kick off:</p>"},{"location":"React_JS/#1-set-up-your-environment","title":"1. Set Up Your Environment","text":"<p>Install Node.js (which includes npm or yarn) and then set up a new React project:</p> <pre><code>npx create-react-app my-app\ncd my-app\nnpm start\n</code></pre>"},{"location":"React_JS/#2-learn-reactjs-basics","title":"2. Learn React.js Basics","text":"<p>Explore the basics of JSX, components, props, and state from the official React documentation.</p>"},{"location":"React_JS/#3-build-a-simple-application","title":"3. Build a Simple Application","text":"<p>Start small! Create a to-do list or a weather fetching app. These beginner-friendly projects will teach you how React components and states work together.</p>"},{"location":"React_JS/#conclusion","title":"Conclusion","text":"<p>React.js has forever changed the way developers build web applications. Its rich ecosystem, component-based architecture, and blazing-fast performance make it an invaluable tool for building modern user interfaces. From hobby projects to enterprise-grade applications, React remains a top choice for developers.</p> <p>Are you ready to add React.js to your skill set and create seamless user experiences? Start exploring it today!</p>"},{"location":"React_JS/#key-resources-for-further-reading","title":"Key Resources for Further Reading","text":"<ol> <li>React.js Official Documentation</li> <li>Introduction to JSX</li> <li>React Component Lifecycle</li> <li>React Hooks Overview</li> <li>React Router Documentation</li> </ol>"},{"location":"sample/","title":"Microsoft Azure: Cloud Computing Platform","text":""},{"location":"sample/#overview","title":"\ud83c\udf10 Overview","text":"<p>Microsoft Azure is a comprehensive cloud computing platform that provides a wide range of services including computing, analytics, storage, and networking. Users can pick and choose from these services to develop and scale new applications or run existing applications in the public cloud.</p>"},{"location":"sample/#table-of-contents","title":"\ud83d\udccb Table of Contents","text":"<ul> <li>Core Services</li> <li>Compute Services</li> <li>Storage Solutions</li> <li>Networking</li> <li>AI &amp; Machine Learning</li> <li>Database Services</li> <li>Security &amp; Identity</li> <li>DevOps &amp; Development</li> <li>Getting Started</li> <li>Pricing Models</li> </ul>"},{"location":"sample/#core-services","title":"\ud83d\ude80 Core Services","text":""},{"location":"sample/#azure-resource-manager-arm","title":"Azure Resource Manager (ARM)","text":"<p>Azure Resource Manager is the deployment and management service for Azure. It provides a management layer that enables you to create, update, and delete resources in your Azure account.</p>"},{"location":"sample/#azure-portal","title":"Azure Portal","text":"<p>The Azure portal is a web-based, unified console that provides an alternative to command-line tools. With the Azure portal, you can manage your Azure subscription using a graphical user interface.</p>"},{"location":"sample/#compute-services","title":"\ud83d\udcbb Compute Services","text":""},{"location":"sample/#virtual-machines","title":"Virtual Machines","text":"<p>Azure Virtual Machines (VMs) give you the flexibility of virtualization without having to buy and maintain the physical hardware.</p> VM Series Use Case CPU Type A-Series Entry-level Basic D-Series General purpose Standard F-Series Compute optimized High-performance G-Series Memory optimized Large memory"},{"location":"sample/#azure-app-service","title":"Azure App Service","text":"<p>A fully managed platform for building, deploying, and scaling web apps.</p> <pre><code># Create a resource group\naz group create --name myResourceGroup --location \"East US\"\n\n# Create an App Service plan\naz appservice plan create --name myAppServicePlan --resource-group myResourceGroup --sku B1\n\n# Create a web app\naz webapp create --resource-group myResourceGroup --plan myAppServicePlan --name myUniqueAppName\n</code></pre>"},{"location":"sample/#azure-functions","title":"Azure Functions","text":"<p>Event-driven, serverless compute platform that can solve complex orchestration problems.</p> <pre><code>// Sample Azure Function (HTTP Trigger)\nmodule.exports = async function (context, req) {\n    context.log('JavaScript HTTP trigger function processed a request.');\n\n    const name = (req.query.name || (req.body &amp;&amp; req.body.name));\n    const responseMessage = name\n        ? \"Hello, \" + name + \". This HTTP triggered function executed successfully.\"\n        : \"This HTTP triggered function executed successfully. Pass a name in the query string or in the request body for a personalized response.\";\n\n    context.res = {\n        status: 200,\n        body: responseMessage\n    };\n}\n</code></pre>"},{"location":"sample/#azure-kubernetes-service-aks","title":"Azure Kubernetes Service (AKS)","text":"<p>Managed Kubernetes service that simplifies deploying a managed Kubernetes cluster in Azure.</p>"},{"location":"sample/#storage-solutions","title":"\ud83d\udcbe Storage Solutions","text":""},{"location":"sample/#blob-storage","title":"Blob Storage","text":"<p>Azure Blob storage is optimized for storing massive amounts of unstructured data.</p> <pre><code>from azure.storage.blob import BlobServiceClient\nimport os\n\n# Initialize the BlobServiceClient\nblob_service_client = BlobServiceClient(\n    account_url=\"https://mystorageaccount.blob.core.windows.net\",\n    credential=\"your_account_key\"\n)\n\n# Upload a file\ndef upload_blob(file_path, container_name, blob_name):\n    blob_client = blob_service_client.get_blob_client(\n        container=container_name, \n        blob=blob_name\n    )\n\n    with open(file_path, \"rb\") as data:\n        blob_client.upload_blob(data, overwrite=True)\n\n    print(f\"Uploaded {blob_name} to {container_name}\")\n</code></pre>"},{"location":"sample/#file-storage","title":"File Storage","text":"<p>Fully managed file shares in the cloud accessible via SMB protocol.</p>"},{"location":"sample/#table-storage","title":"Table Storage","text":"<p>NoSQL key-attribute data store using a schemaless design.</p>"},{"location":"sample/#networking","title":"\ud83c\udf10 Networking","text":""},{"location":"sample/#virtual-network-vnet","title":"Virtual Network (VNet)","text":"<p>Azure Virtual Network enables Azure resources to securely communicate with each other, the internet, and on-premises networks.</p>"},{"location":"sample/#load-balancer","title":"Load Balancer","text":"<p>Distribute incoming network traffic across multiple virtual machines.</p>"},{"location":"sample/#application-gateway","title":"Application Gateway","text":"<p>Web traffic load balancer with additional capabilities like SSL termination and Web Application Firewall.</p>"},{"location":"sample/#ai-machine-learning","title":"\ud83e\udd16 AI &amp; Machine Learning","text":""},{"location":"sample/#azure-cognitive-services","title":"Azure Cognitive Services","text":"<p>Pre-built AI models that you can integrate into your applications.</p> <pre><code>using Microsoft.Azure.CognitiveServices.Vision.ComputerVision;\nusing Microsoft.Azure.CognitiveServices.Vision.ComputerVision.Models;\n\npublic class ComputerVisionService\n{\n    private readonly ComputerVisionClient client;\n\n    public ComputerVisionService(string endpoint, string subscriptionKey)\n    {\n        client = new ComputerVisionClient(new ApiKeyServiceClientCredentials(subscriptionKey))\n        {\n            Endpoint = endpoint\n        };\n    }\n\n    public async Task&lt;string&gt; AnalyzeImageAsync(string imageUrl)\n    {\n        var features = new List&lt;VisualFeatureTypes?&gt;\n        {\n            VisualFeatureTypes.Description,\n            VisualFeatureTypes.Objects,\n            VisualFeatureTypes.Tags\n        };\n\n        var analysis = await client.AnalyzeImageAsync(imageUrl, features);\n        return analysis.Description.Captions.FirstOrDefault()?.Text ?? \"No description available\";\n    }\n}\n</code></pre>"},{"location":"sample/#azure-machine-learning","title":"Azure Machine Learning","text":"<p>End-to-end machine learning lifecycle management.</p>"},{"location":"sample/#azure-openai-service","title":"Azure OpenAI Service","text":"<p>Access to OpenAI's powerful language models including GPT-4, GPT-3.5-turbo, and DALL-E.</p>"},{"location":"sample/#database-services","title":"\ud83d\uddc4\ufe0f Database Services","text":""},{"location":"sample/#azure-sql-database","title":"Azure SQL Database","text":"<p>Fully managed relational database with auto-scale, integral intelligence, and robust security.</p>"},{"location":"sample/#cosmos-db","title":"Cosmos DB","text":"<p>Globally distributed, multi-model database service.</p> <pre><code>-- Sample Azure SQL Database query\nSELECT \n    p.ProductName,\n    p.Price,\n    c.CategoryName\nFROM Products p\nINNER JOIN Categories c ON p.CategoryID = c.CategoryID\nWHERE p.Price &gt; 100\nORDER BY p.Price DESC;\n</code></pre>"},{"location":"sample/#azure-database-for-mysqlpostgresql","title":"Azure Database for MySQL/PostgreSQL","text":"<p>Fully managed database services for open-source databases.</p>"},{"location":"sample/#security-identity","title":"\ud83d\udd10 Security &amp; Identity","text":""},{"location":"sample/#azure-active-directory-azure-ad","title":"Azure Active Directory (Azure AD)","text":"<p>Microsoft's cloud-based identity and access management service.</p>"},{"location":"sample/#key-vault","title":"Key Vault","text":"<p>Safeguard cryptographic keys and secrets used by cloud applications and services.</p>"},{"location":"sample/#security-center","title":"Security Center","text":"<p>Unified security management and advanced threat protection across hybrid cloud workloads.</p>"},{"location":"sample/#devops-development","title":"\ud83d\udd27 DevOps &amp; Development","text":""},{"location":"sample/#azure-devops","title":"Azure DevOps","text":"<p>Set of development tools for software teams including Azure Boards, Azure Repos, Azure Pipelines, Azure Test Plans, and Azure Artifacts.</p> <pre><code># Azure Pipelines YAML example\ntrigger:\n- main\n\npool:\n  vmImage: 'ubuntu-latest'\n\nvariables:\n  buildConfiguration: 'Release'\n\nsteps:\n- task: DotNetCoreCLI@2\n  displayName: 'Restore packages'\n  inputs:\n    command: 'restore'\n    projects: '**/*.csproj'\n\n- task: DotNetCoreCLI@2\n  displayName: 'Build project'\n  inputs:\n    command: 'build'\n    projects: '**/*.csproj'\n    arguments: '--configuration $(buildConfiguration)'\n\n- task: DotNetCoreCLI@2\n  displayName: 'Run tests'\n  inputs:\n    command: 'test'\n    projects: '**/*Tests.csproj'\n    arguments: '--configuration $(buildConfiguration) --collect \"Code coverage\"'\n</code></pre>"},{"location":"sample/#github-actions-for-azure","title":"GitHub Actions for Azure","text":"<p>Automate your software development workflows right in your GitHub repository.</p>"},{"location":"sample/#getting-started","title":"\ud83d\udea6 Getting Started","text":""},{"location":"sample/#step-1-create-an-azure-account","title":"Step 1: Create an Azure Account","text":"<ol> <li>Visit azure.microsoft.com</li> <li>Click \"Start free\" or \"Free account\"</li> <li>Sign up with your Microsoft account or create a new one</li> <li>Verify your identity and add payment information (free tier available)</li> </ol>"},{"location":"sample/#step-2-install-azure-cli","title":"Step 2: Install Azure CLI","text":"<pre><code># Install Azure CLI on Windows\nInvoke-WebRequest -Uri https://aka.ms/installazurecliwindows -OutFile .\\AzureCLI.msi\nStart-Process msiexec.exe -Wait -ArgumentList '/I AzureCLI.msi /quiet'\n\n# Login to Azure\naz login\n\n# Set your subscription\naz account set --subscription \"your-subscription-id\"\n</code></pre>"},{"location":"sample/#step-3-create-your-first-resource","title":"Step 3: Create Your First Resource","text":"<pre><code># Create a resource group\naz group create --name \"my-first-rg\" --location \"eastus\"\n\n# Create a storage account\naz storage account create \\\n    --name mystorageaccount123 \\\n    --resource-group my-first-rg \\\n    --location eastus \\\n    --sku Standard_LRS\n</code></pre>"},{"location":"sample/#pricing-models","title":"\ud83d\udcb0 Pricing Models","text":""},{"location":"sample/#pay-as-you-go","title":"Pay-As-You-Go","text":"<p>Pay only for what you use with no upfront costs.</p>"},{"location":"sample/#reserved-instances","title":"Reserved Instances","text":"<p>Save up to 72% compared to pay-as-you-go pricing with 1-year or 3-year terms.</p>"},{"location":"sample/#azure-hybrid-benefit","title":"Azure Hybrid Benefit","text":"<p>Use your existing on-premises Windows Server and SQL Server licenses on Azure.</p>"},{"location":"sample/#free-tier-services","title":"Free Tier Services","text":"<p>Azure offers several services with free tiers:</p> Service Free Tier Limits App Service 10 web apps Functions 1 million executions/month Cosmos DB 5 GB storage Blob Storage 5 GB LRS hot storage Virtual Machines 750 hours B1S instance"},{"location":"sample/#useful-resources","title":"\ud83d\udd17 Useful Resources","text":""},{"location":"sample/#documentation-learning","title":"Documentation &amp; Learning","text":"<ul> <li>Azure Documentation</li> <li>Microsoft Learn</li> <li>Azure Architecture Center</li> </ul>"},{"location":"sample/#tools-sdks","title":"Tools &amp; SDKs","text":"<ul> <li>Azure CLI</li> <li>Azure PowerShell</li> <li>Azure SDK for .NET</li> <li>Azure SDK for Python</li> <li>Azure SDK for JavaScript</li> </ul>"},{"location":"sample/#community-support","title":"Community &amp; Support","text":"<ul> <li>Azure Community Support</li> <li>Stack Overflow - Azure</li> <li>Azure Updates</li> </ul>"},{"location":"sample/#best-practices","title":"\ud83c\udfd7\ufe0f Best Practices","text":""},{"location":"sample/#security","title":"Security","text":"<ul> <li>Enable Multi-Factor Authentication (MFA)</li> <li>Use Azure Key Vault for secrets management</li> <li>Implement Role-Based Access Control (RBAC)</li> <li>Enable Azure Security Center recommendations</li> </ul>"},{"location":"sample/#cost-optimization","title":"Cost Optimization","text":"<ul> <li>Use Azure Cost Management + Billing</li> <li>Implement resource tagging strategy</li> <li>Set up budget alerts</li> <li>Consider reserved instances for predictable workloads</li> </ul>"},{"location":"sample/#performance","title":"Performance","text":"<ul> <li>Choose the right Azure region</li> <li>Use Azure CDN for global content delivery</li> <li>Implement auto-scaling</li> <li>Monitor with Azure Monitor and Application Insights</li> </ul>"},{"location":"sample/#reliability","title":"Reliability","text":"<ul> <li>Design for failure with redundancy</li> <li>Use availability zones</li> <li>Implement backup and disaster recovery</li> <li>Use health checks and monitoring</li> </ul>"},{"location":"sample/#support-contact","title":"\ud83d\udcde Support &amp; Contact","text":"<p>For Azure support and assistance:</p> <ul> <li>\ud83c\udfab Azure Support Plans: Basic (Free), Developer ($29/month), Standard ($100/month), Professional Direct ($1000/month)</li> <li>\ud83d\udcda Documentation: docs.microsoft.com/azure</li> <li>\ud83d\udcac Community Forums: Microsoft Q&amp;A</li> <li>\ud83c\udf93 Training: Microsoft Learn</li> </ul> <p>Last updated: July 3, 2025</p> <p>\u00a9 2025 Microsoft Corporation. All rights reserved.</p>"},{"location":"sk/","title":"Microsoft Semantic Kernel","text":""},{"location":"sk/#overview","title":"\ud83e\udde0 Overview","text":"<p>Microsoft Semantic Kernel (SK) is an open-source SDK that lets you easily combine AI services like OpenAI, Azure OpenAI, and Hugging Face with conventional programming languages like C#, Python, and Java. It serves as a lightweight, enterprise-ready orchestration layer that enables developers to create AI agents and integrate large language models (LLMs) into their applications.</p>"},{"location":"sk/#table-of-contents","title":"\ud83d\udccb Table of Contents","text":"<ul> <li>Key Features</li> <li>Architecture</li> <li>Getting Started</li> <li>Core Concepts</li> <li>Plugins &amp; Functions</li> <li>Memory &amp; Embeddings</li> <li>Planners</li> <li>Code Examples</li> <li>Best Practices</li> <li>Integration Scenarios</li> <li>Troubleshooting</li> </ul>"},{"location":"sk/#key-features","title":"\ud83d\ude80 Key Features","text":""},{"location":"sk/#multi-language-support","title":"Multi-Language Support","text":"<ul> <li>C#: First-class support with .NET integration</li> <li>Python: Full-featured implementation</li> <li>Java: Enterprise-ready SDK</li> <li>TypeScript/JavaScript: Web and Node.js support</li> </ul>"},{"location":"sk/#ai-service-integration","title":"AI Service Integration","text":"Service Provider Capabilities GPT-4/GPT-3.5 OpenAI Text generation, completion Azure OpenAI Microsoft Enterprise-grade AI services Claude Anthropic Advanced reasoning Llama 2 Meta Open-source models Hugging Face Community Diverse model ecosystem"},{"location":"sk/#enterprise-features","title":"Enterprise Features","text":"<ul> <li>\ud83d\udd10 Security: Built-in authentication and authorization</li> <li>\ud83d\udcca Observability: Logging, metrics, and tracing</li> <li>\ud83c\udfd7\ufe0f Scalability: Async/await patterns and performance optimization</li> <li>\ud83d\udd27 Extensibility: Plugin architecture for custom functionality</li> </ul>"},{"location":"sk/#architecture","title":"\ud83c\udfd7\ufe0f Architecture","text":"<pre><code>graph TB\n    A[Application Layer] --&gt; B[Semantic Kernel]\n    B --&gt; C[Kernel Services]\n    B --&gt; D[Plugins]\n    B --&gt; E[Memory]\n    B --&gt; F[Planners]\n\n    C --&gt; G[AI Services]\n    C --&gt; H[Connectors]\n\n    D --&gt; I[Native Functions]\n    D --&gt; J[Semantic Functions]\n\n    E --&gt; K[Vector Store]\n    E --&gt; L[Embeddings]\n\n    F --&gt; M[Sequential Planner]\n    F --&gt; N[Action Planner]\n\n    G --&gt; O[OpenAI]\n    G --&gt; P[Azure OpenAI]\n    G --&gt; Q[Hugging Face]\n</code></pre>"},{"location":"sk/#getting-started","title":"\ud83c\udfaf Getting Started","text":""},{"location":"sk/#installation","title":"Installation","text":""},{"location":"sk/#c-net","title":"C# (.NET)","text":"<pre><code>dotnet add package Microsoft.SemanticKernel\ndotnet add package Microsoft.SemanticKernel.Plugins.Core\n</code></pre>"},{"location":"sk/#python","title":"Python","text":"<pre><code>pip install semantic-kernel\npip install semantic-kernel[azure]\n</code></pre>"},{"location":"sk/#typescriptjavascript","title":"TypeScript/JavaScript","text":"<pre><code>npm install @microsoft/semantic-kernel\n</code></pre>"},{"location":"sk/#basic-setup","title":"Basic Setup","text":""},{"location":"sk/#c-example","title":"C# Example","text":"<pre><code>using Microsoft.SemanticKernel;\nusing Microsoft.SemanticKernel.AI.OpenAI;\n\n// Create kernel instance\nvar kernel = Kernel.CreateBuilder()\n    .AddAzureOpenAIChatCompletion(\n        deploymentName: \"gpt-35-turbo\",\n        endpoint: \"https://your-resource.openai.azure.com/\",\n        apiKey: \"your-api-key\")\n    .Build();\n\n// Simple prompt execution\nvar prompt = \"Translate 'Hello World' to French\";\nvar result = await kernel.InvokePromptAsync(prompt);\nConsole.WriteLine(result);\n</code></pre>"},{"location":"sk/#python-example","title":"Python Example","text":"<pre><code>import semantic_kernel as sk\nfrom semantic_kernel.connectors.ai.open_ai import AzureChatCompletion\n\n# Initialize kernel\nkernel = sk.Kernel()\n\n# Add AI service\nazure_chat_service = AzureChatCompletion(\n    deployment_name=\"gpt-35-turbo\",\n    endpoint=\"https://your-resource.openai.azure.com/\",\n    api_key=\"your-api-key\"\n)\nkernel.add_chat_service(\"azure_chat\", azure_chat_service)\n\n# Execute prompt\nasync def main():\n    prompt = \"Explain quantum computing in simple terms\"\n    result = await kernel.invoke_prompt_async(prompt)\n    print(result)\n\nimport asyncio\nasyncio.run(main())\n</code></pre>"},{"location":"sk/#core-concepts","title":"\ud83e\udde9 Core Concepts","text":""},{"location":"sk/#1-kernel","title":"1. Kernel","text":"<p>The central orchestration engine that manages AI services, plugins, and memory.</p> <pre><code>var kernel = Kernel.CreateBuilder()\n    .AddAzureOpenAIChatCompletion(deploymentName, endpoint, apiKey)\n    .AddAzureOpenAITextEmbeddingGeneration(embeddingDeployment, endpoint, apiKey)\n    .Build();\n</code></pre>"},{"location":"sk/#2-functions","title":"2. Functions","text":"<p>Reusable pieces of functionality that can be combined to solve complex problems.</p>"},{"location":"sk/#native-functions-c","title":"Native Functions (C#)","text":"<pre><code>public class MathPlugin\n{\n    [KernelFunction]\n    [Description(\"Add two numbers\")]\n    public double Add(\n        [Description(\"First number\")] double number1,\n        [Description(\"Second number\")] double number2)\n    {\n        return number1 + number2;\n    }\n\n    [KernelFunction]\n    [Description(\"Calculate compound interest\")]\n    public double CompoundInterest(\n        [Description(\"Principal amount\")] double principal,\n        [Description(\"Annual interest rate\")] double rate,\n        [Description(\"Number of years\")] int years)\n    {\n        return principal * Math.Pow(1 + rate, years);\n    }\n}\n</code></pre>"},{"location":"sk/#semantic-functions","title":"Semantic Functions","text":"<pre><code>var summarizeFunction = kernel.CreateFunctionFromPrompt(\n    promptTemplate: @\"\n    Summarize the following text in 2-3 sentences:\n\n    {{$input}}\n\n    Summary:\",\n    functionName: \"Summarize\",\n    description: \"Summarize text content\"\n);\n\nvar result = await kernel.InvokeAsync(summarizeFunction, new() { [\"input\"] = longText });\n</code></pre>"},{"location":"sk/#3-plugins","title":"3. Plugins","text":"<p>Collections of related functions that can be imported and used together.</p> <pre><code>// Import built-in plugins\nkernel.ImportPluginFromType&lt;TimePlugin&gt;(\"time\");\nkernel.ImportPluginFromType&lt;MathPlugin&gt;(\"math\");\n\n// Import custom plugin\nkernel.ImportPluginFromObject(new EmailPlugin(emailService), \"email\");\n\n// Use plugin functions\nvar currentTime = await kernel.InvokeAsync(\"time\", \"Now\");\nvar sum = await kernel.InvokeAsync(\"math\", \"Add\", new() { \n    [\"number1\"] = \"10\", \n    [\"number2\"] = \"20\" \n});\n</code></pre>"},{"location":"sk/#memory-embeddings","title":"\ud83e\udde0 Memory &amp; Embeddings","text":""},{"location":"sk/#vector-memory-store","title":"Vector Memory Store","text":"<pre><code>using Microsoft.SemanticKernel.Memory;\n\n// Configure memory store\nvar memoryBuilder = new MemoryBuilder();\nmemoryBuilder.WithAzureOpenAITextEmbeddingGeneration(\n    deploymentName: \"text-embedding-ada-002\",\n    endpoint: endpoint,\n    apiKey: apiKey);\nmemoryBuilder.WithMemoryStore(new VolatileMemoryStore());\n\nvar memory = memoryBuilder.Build();\n\n// Store information\nawait memory.SaveInformationAsync(\n    collection: \"products\",\n    text: \"The iPhone 15 Pro features a titanium design and A17 Pro chip\",\n    id: \"iphone15pro\",\n    description: \"iPhone 15 Pro specifications\"\n);\n\n// Search memory\nvar searchResults = memory.SearchAsync(\n    collection: \"products\",\n    query: \"What are the features of the latest iPhone?\",\n    limit: 5);\n\nawait foreach (var result in searchResults)\n{\n    Console.WriteLine($\"Relevance: {result.Relevance:F2}\");\n    Console.WriteLine($\"Text: {result.Metadata.Text}\");\n}\n</code></pre>"},{"location":"sk/#rag-retrieval-augmented-generation","title":"RAG (Retrieval-Augmented Generation)","text":"<pre><code>import semantic_kernel as sk\nfrom semantic_kernel.memory.volatile_memory_store import VolatileMemoryStore\n\n# Setup kernel with memory\nkernel = sk.Kernel()\nkernel.add_chat_service(\"azure_chat\", azure_chat_service)\nkernel.add_text_embedding_generation_service(\n    \"azure_embedding\", azure_embedding_service\n)\n\n# Register memory store\nkernel.register_memory_store(VolatileMemoryStore())\n\n# Save documents to memory\nawait kernel.memory.save_information_async(\n    collection=\"documents\",\n    text=\"Python is a high-level programming language known for its simplicity\",\n    id=\"python_intro\",\n    description=\"Introduction to Python programming\"\n)\n\n# RAG-enabled function\nrag_function = kernel.create_semantic_function(\n    prompt_template=\"\"\"\n    Use the following context to answer the question:\n\n    Context: {{recall $query}}\n\n    Question: {{$query}}\n\n    Answer:\"\"\",\n    function_name=\"RAGAnswer\"\n)\n\nresult = await kernel.run_async(\n    rag_function,\n    input_vars={\"query\": \"What is Python?\"}\n)\n</code></pre>"},{"location":"sk/#planners","title":"\ud83c\udfaf Planners","text":""},{"location":"sk/#sequential-planner","title":"Sequential Planner","text":"<p>Automatically creates and executes multi-step plans.</p> <pre><code>using Microsoft.SemanticKernel.Planning;\n\nvar planner = new SequentialPlanner(kernel);\n\nvar plan = await planner.CreatePlanAsync(\n    \"Send an email to john@example.com with the weather forecast for Seattle\");\n\nConsole.WriteLine(\"Plan steps:\");\nforeach (var step in plan.Steps)\n{\n    Console.WriteLine($\"- {step.Description}\");\n}\n\n// Execute the plan\nvar result = await kernel.RunAsync(plan);\nConsole.WriteLine($\"Result: {result}\");\n</code></pre>"},{"location":"sk/#function-calling-planner","title":"Function Calling Planner","text":"<pre><code>from semantic_kernel.planning import FunctionCallingStepwisePlanner\n\n# Create planner\nplanner = FunctionCallingStepwisePlanner(\n    kernel, \n    max_iterations=10,\n    max_tokens=4000\n)\n\n# Execute complex task\nresult = await planner.invoke_async(\n    \"Find the current temperature in New York and convert it to Celsius\"\n)\n\nprint(f\"Final result: {result.final_answer}\")\nprint(f\"Steps taken: {len(result.iterations)}\")\n</code></pre>"},{"location":"sk/#advanced-code-examples","title":"\ud83d\udcbb Advanced Code Examples","text":""},{"location":"sk/#custom-ai-agent","title":"Custom AI Agent","text":"<pre><code>public class CustomerServiceAgent\n{\n    private readonly Kernel _kernel;\n    private readonly ISemanticTextMemory _memory;\n\n    public CustomerServiceAgent(Kernel kernel, ISemanticTextMemory memory)\n    {\n        _kernel = kernel;\n        _memory = memory;\n    }\n\n    public async Task&lt;string&gt; HandleCustomerQueryAsync(string query, string customerId)\n    {\n        // Retrieve customer context from memory\n        var customerContext = await _memory.SearchAsync(\n            collection: $\"customer_{customerId}\",\n            query: query,\n            limit: 3\n        ).ToListAsync();\n\n        var contextText = string.Join(\"\\n\", customerContext.Select(c =&gt; c.Metadata.Text));\n\n        // Create contextual response\n        var responseFunction = _kernel.CreateFunctionFromPrompt(@\"\n            You are a helpful customer service agent. Use the customer context below to provide a personalized response.\n\n            Customer Context:\n            {{$context}}\n\n            Customer Query: {{$query}}\n\n            Response:\");\n\n        var result = await _kernel.InvokeAsync(responseFunction, new KernelArguments\n        {\n            [\"context\"] = contextText,\n            [\"query\"] = query\n        });\n\n        return result.ToString();\n    }\n}\n</code></pre>"},{"location":"sk/#multi-modal-processing","title":"Multi-Modal Processing","text":"<pre><code>async def process_image_and_text(kernel, image_path: str, text_query: str):\n    \"\"\"Process both image and text inputs using multi-modal AI\"\"\"\n\n    # Image analysis function\n    image_function = kernel.create_semantic_function(\n        prompt_template=\"\"\"\n        Analyze this image and describe what you see:\n\n        Image: {{$image}}\n\n        Description:\"\"\",\n        function_name=\"AnalyzeImage\"\n    )\n\n    # Text processing function  \n    text_function = kernel.create_semantic_function(\n        prompt_template=\"\"\"\n        Based on the image description and user query, provide a comprehensive answer:\n\n        Image Description: {{$image_description}}\n        User Query: {{$query}}\n\n        Answer:\"\"\",\n        function_name=\"ProcessQuery\"\n    )\n\n    # Load and encode image\n    with open(image_path, \"rb\") as image_file:\n        image_data = base64.b64encode(image_file.read()).decode()\n\n    # Analyze image\n    image_result = await kernel.run_async(\n        image_function,\n        input_vars={\"image\": image_data}\n    )\n\n    # Process combined input\n    final_result = await kernel.run_async(\n        text_function,\n        input_vars={\n            \"image_description\": str(image_result),\n            \"query\": text_query\n        }\n    )\n\n    return str(final_result)\n</code></pre>"},{"location":"sk/#streaming-responses","title":"Streaming Responses","text":"<pre><code>public async IAsyncEnumerable&lt;string&gt; StreamResponseAsync(string prompt)\n{\n    var function = _kernel.CreateFunctionFromPrompt(prompt);\n\n    await foreach (var chunk in _kernel.InvokeStreamingAsync&lt;string&gt;(function))\n    {\n        yield return chunk;\n    }\n}\n\n// Usage\nawait foreach (var chunk in agent.StreamResponseAsync(\"Write a story about AI\"))\n{\n    Console.Write(chunk);\n    await Task.Delay(50); // Simulate typing effect\n}\n</code></pre>"},{"location":"sk/#best-practices","title":"\ud83d\udcca Best Practices","text":""},{"location":"sk/#1-performance-optimization","title":"1. Performance Optimization","text":"<pre><code>// Use dependency injection\nservices.AddScoped&lt;Kernel&gt;(provider =&gt; \n{\n    return Kernel.CreateBuilder()\n        .AddAzureOpenAIChatCompletion(/* config */)\n        .Build();\n});\n\n// Implement caching\nservices.AddMemoryCache();\nservices.AddScoped&lt;ICachedKernelService, CachedKernelService&gt;();\n\n// Connection pooling\nservices.Configure&lt;HttpClientFactoryOptions&gt;(options =&gt;\n{\n    options.HandlerLifetime = TimeSpan.FromMinutes(5);\n});\n</code></pre>"},{"location":"sk/#2-error-handling","title":"2. Error Handling","text":"<pre><code>public async Task&lt;string&gt; SafeInvokeAsync(string prompt)\n{\n    try\n    {\n        var result = await _kernel.InvokePromptAsync(prompt);\n        return result.ToString();\n    }\n    catch (HttpRequestException ex) when (ex.Message.Contains(\"429\"))\n    {\n        // Rate limiting - implement exponential backoff\n        await Task.Delay(TimeSpan.FromSeconds(Math.Pow(2, retryCount)));\n        return await SafeInvokeAsync(prompt);\n    }\n    catch (ArgumentException ex)\n    {\n        // Invalid input handling\n        _logger.LogWarning(\"Invalid prompt: {Error}\", ex.Message);\n        return \"I'm sorry, I couldn't process that request.\";\n    }\n}\n</code></pre>"},{"location":"sk/#3-security-considerations","title":"3. Security Considerations","text":"<pre><code>// Input validation\npublic class PromptValidator\n{\n    private readonly string[] _blockedPatterns = { \"ignore previous\", \"system:\", \"assistant:\" };\n\n    public bool IsValidPrompt(string prompt)\n    {\n        return !_blockedPatterns.Any(pattern =&gt; \n            prompt.ToLower().Contains(pattern.ToLower()));\n    }\n}\n\n// Content filtering\npublic async Task&lt;string&gt; GetFilteredResponseAsync(string prompt)\n{\n    var result = await _kernel.InvokePromptAsync(prompt);\n    var filteredResult = await _contentFilter.FilterAsync(result.ToString());\n    return filteredResult;\n}\n</code></pre>"},{"location":"sk/#integration-scenarios","title":"\ud83d\udd17 Integration Scenarios","text":""},{"location":"sk/#1-web-api-integration","title":"1. Web API Integration","text":"<pre><code>[ApiController]\n[Route(\"api/[controller]\")]\npublic class ChatController : ControllerBase\n{\n    private readonly Kernel _kernel;\n\n    public ChatController(Kernel kernel)\n    {\n        _kernel = kernel;\n    }\n\n    [HttpPost(\"completions\")]\n    public async Task&lt;IActionResult&gt; GetCompletion([FromBody] ChatRequest request)\n    {\n        var result = await _kernel.InvokePromptAsync(request.Prompt);\n\n        return Ok(new ChatResponse\n        {\n            Message = result.ToString(),\n            Timestamp = DateTime.UtcNow\n        });\n    }\n\n    [HttpPost(\"completions/stream\")]\n    public async Task&lt;IActionResult&gt; GetStreamingCompletion([FromBody] ChatRequest request)\n    {\n        Response.ContentType = \"text/event-stream\";\n\n        await foreach (var chunk in _kernel.InvokeStreamingAsync&lt;string&gt;(\n            _kernel.CreateFunctionFromPrompt(request.Prompt)))\n        {\n            await Response.WriteAsync($\"data: {chunk}\\n\\n\");\n            await Response.Body.FlushAsync();\n        }\n\n        return new EmptyResult();\n    }\n}\n</code></pre>"},{"location":"sk/#2-background-service","title":"2. Background Service","text":"<pre><code>public class DocumentProcessingService : BackgroundService\n{\n    private readonly Kernel _kernel;\n    private readonly IServiceProvider _serviceProvider;\n\n    protected override async Task ExecuteAsync(CancellationToken stoppingToken)\n    {\n        while (!stoppingToken.IsCancellationRequested)\n        {\n            using var scope = _serviceProvider.CreateScope();\n            var documentQueue = scope.ServiceProvider.GetRequiredService&lt;IDocumentQueue&gt;();\n\n            var document = await documentQueue.DequeueAsync(stoppingToken);\n            if (document != null)\n            {\n                await ProcessDocumentAsync(document);\n            }\n\n            await Task.Delay(1000, stoppingToken);\n        }\n    }\n\n    private async Task ProcessDocumentAsync(Document document)\n    {\n        var summaryFunction = _kernel.CreateFunctionFromPrompt(@\"\n            Summarize the following document:\n\n            {{$content}}\n\n            Summary:\");\n\n        var summary = await _kernel.InvokeAsync(summaryFunction, \n            new KernelArguments { [\"content\"] = document.Content });\n\n        document.Summary = summary.ToString();\n        await _documentRepository.UpdateAsync(document);\n    }\n}\n</code></pre>"},{"location":"sk/#troubleshooting","title":"\ud83d\udee0\ufe0f Troubleshooting","text":""},{"location":"sk/#common-issues","title":"Common Issues","text":""},{"location":"sk/#1-rate-limiting","title":"1. Rate Limiting","text":"<pre><code>// Implement retry with exponential backoff\npublic class RateLimitHandler : DelegatingHandler\n{\n    protected override async Task&lt;HttpResponseMessage&gt; SendAsync(\n        HttpRequestMessage request, CancellationToken cancellationToken)\n    {\n        var response = await base.SendAsync(request, cancellationToken);\n\n        if (response.StatusCode == HttpStatusCode.TooManyRequests)\n        {\n            var retryAfter = response.Headers.RetryAfter?.Delta ?? TimeSpan.FromSeconds(1);\n            await Task.Delay(retryAfter, cancellationToken);\n            return await SendAsync(request, cancellationToken);\n        }\n\n        return response;\n    }\n}\n</code></pre>"},{"location":"sk/#2-memory-management","title":"2. Memory Management","text":"<pre><code># Proper cleanup for long-running applications\nimport gc\nfrom semantic_kernel.memory import VolatileMemoryStore\n\nclass ManagedMemoryStore:\n    def __init__(self, max_items: int = 1000):\n        self.store = VolatileMemoryStore()\n        self.max_items = max_items\n        self.item_count = 0\n\n    async def save_information_async(self, collection: str, text: str, id: str):\n        if self.item_count &gt;= self.max_items:\n            await self.cleanup_old_items()\n\n        await self.store.save_information_async(collection, text, id)\n        self.item_count += 1\n\n    async def cleanup_old_items(self):\n        # Implement LRU or time-based cleanup\n        pass\n</code></pre>"},{"location":"sk/#performance-monitoring","title":"Performance Monitoring","text":"<pre><code>public class KernelMetrics\n{\n    private readonly IMetrics _metrics;\n    private readonly Counter&lt;int&gt; _requestCounter;\n    private readonly Histogram&lt;double&gt; _responseTime;\n\n    public KernelMetrics(IMeterFactory meterFactory)\n    {\n        var meter = meterFactory.Create(\"SemanticKernel\");\n        _requestCounter = meter.CreateCounter&lt;int&gt;(\"sk_requests_total\");\n        _responseTime = meter.CreateHistogram&lt;double&gt;(\"sk_response_duration_seconds\");\n    }\n\n    public async Task&lt;T&gt; MeasureAsync&lt;T&gt;(Func&lt;Task&lt;T&gt;&gt; operation, string functionName)\n    {\n        var stopwatch = Stopwatch.StartNew();\n        try\n        {\n            var result = await operation();\n            _requestCounter.Add(1, new TagList { [\"function\"] = functionName, [\"status\"] = \"success\" });\n            return result;\n        }\n        catch\n        {\n            _requestCounter.Add(1, new TagList { [\"function\"] = functionName, [\"status\"] = \"error\" });\n            throw;\n        }\n        finally\n        {\n            _responseTime.Record(stopwatch.Elapsed.TotalSeconds, new TagList { [\"function\"] = functionName });\n        }\n    }\n}\n</code></pre>"},{"location":"sk/#resources","title":"\ud83d\udcda Resources","text":""},{"location":"sk/#official-documentation","title":"Official Documentation","text":"<ul> <li>Semantic Kernel GitHub</li> <li>Official Documentation</li> <li>API Reference</li> </ul>"},{"location":"sk/#community-learning","title":"Community &amp; Learning","text":"<ul> <li>Semantic Kernel Discord</li> <li>Sample Applications</li> <li>YouTube Tutorials</li> </ul>"},{"location":"sk/#tools-extensions","title":"Tools &amp; Extensions","text":"<ul> <li>Visual Studio Code Extension: Semantic Kernel Tools</li> <li>Azure DevOps Extension: SK Pipeline Tasks</li> <li>NuGet Packages: Microsoft.SemanticKernel.*</li> <li>pip packages: semantic-kernel, semantic-kernel[azure]</li> </ul>"},{"location":"sk/#recent-updates","title":"\ud83d\udd04 Recent Updates","text":""},{"location":"sk/#version-100-latest","title":"Version 1.0.0 (Latest)","text":"<ul> <li>\u2728 Stable API: Production-ready with semantic versioning</li> <li>\ud83d\ude80 Performance: 50% faster function execution</li> <li>\ud83d\udd27 New Planners: Function Calling and Handlebars planners</li> <li>\ud83d\udcf1 Mobile Support: Xamarin and MAUI compatibility</li> <li>\ud83c\udf10 Multi-language: Java and TypeScript GA releases</li> </ul>"},{"location":"sk/#upcoming-features-roadmap","title":"Upcoming Features (Roadmap)","text":"<ul> <li>\ud83e\udd16 Agent Framework: Multi-agent orchestration</li> <li>\ud83d\udd04 Workflow Engine: Visual workflow designer</li> <li>\ud83d\udcca Analytics Dashboard: Built-in observability</li> <li>\ud83c\udf0d Edge Deployment: IoT and edge computing support</li> </ul> <p>Last updated: July 3, 2025</p> <p>\u00a9 2025 Microsoft Corporation. All rights reserved.</p>"},{"location":"test_blog/","title":"Test Blog Post","text":""},{"location":"test_blog/#generated-at-2025-07-03-154948","title":"Generated at: 2025-07-03 15:49:48","text":"<p>This is a test blog post to verify that the AI Blog Agent can successfully upload content to GitHub.</p>"},{"location":"test_blog/#features-tested","title":"Features Tested:","text":"<ul> <li>\u2705 File creation in docs/ folder</li> <li>\u2705 Markdown content formatting</li> <li>\u2705 GitHub API integration</li> </ul>"},{"location":"test_blog/#code-example","title":"Code Example:","text":"<pre><code>def test_function():\n    print(\"AI Blog Agent is working!\")\n    return True\n</code></pre> <p>End of test post.</p>"},{"location":"vk/","title":"Virat Kohli - The King of Cricket","text":""},{"location":"vk/#personal-information","title":"Personal Information","text":"<ul> <li>Full Name: Virat Kohli</li> <li>Born: November 5, 1988</li> <li>Birthplace: Delhi, India</li> <li>Age: 36 years old</li> <li>Height: 5'9\" (175 cm)</li> </ul>"},{"location":"vk/#career-overview","title":"Career Overview","text":"<p>Virat Kohli is one of the greatest batsmen in cricket history. He is known for his aggressive batting style and exceptional fitness.</p>"},{"location":"vk/#team-career","title":"Team Career","text":"<ul> <li>International Debut: 2008</li> <li>Test Debut: June 20, 2011</li> <li>ODI Debut: August 18, 2008</li> <li>T20I Debut: June 12, 2010</li> </ul>"},{"location":"vk/#major-achievements","title":"Major Achievements","text":""},{"location":"vk/#records","title":"Records","text":"<ul> <li>Most centuries in ODI cricket (50+ centuries)</li> <li>Fastest to reach 8,000, 9,000, 10,000, 11,000, and 12,000 ODI runs</li> <li>Most double centuries as captain in Test cricket</li> </ul>"},{"location":"vk/#awards","title":"Awards","text":"<ul> <li>Rajiv Gandhi Khel Ratna Award (2018)</li> <li>Padma Shri (2017)</li> <li>Arjuna Award (2013)</li> </ul>"},{"location":"vk/#ipl-career","title":"IPL Career","text":"<ul> <li>Team: Royal Challengers Bangalore (RCB)</li> <li>Role: Batsman and former captain</li> <li>IPL Debut: 2008</li> <li>Orange Cap: 2016 (973 runs)</li> </ul>"},{"location":"vk/#captaincy","title":"Captaincy","text":"<ul> <li>Test Captain: 2014-2022</li> <li>ODI/T20I Captain: 2017-2022</li> <li>Led India to historic Test series wins in Australia and England</li> </ul>"},{"location":"vk/#personal-life","title":"Personal Life","text":"<ul> <li>Wife: Anushka Sharma (Bollywood actress)</li> <li>Marriage: December 11, 2017</li> <li>Children: Daughter Vamika (born 2021), Son Akaay (born 2024)</li> </ul>"},{"location":"vk/#business-ventures","title":"Business Ventures","text":"<ul> <li>One8 Commune: Restaurant chain</li> <li>Wrogn: Clothing brand</li> <li>Various endorsements and investments</li> </ul>"},{"location":"vk/#playing-style","title":"Playing Style","text":"<p>Virat Kohli is known for his: - Aggressive batting approach - Excellent fitness and running between wickets - Strong mental game and determination - Ability to chase targets in limited-overs cricket</p> <p>The King continues to inspire millions of cricket fans worldwide! \ud83c\udfcf</p>"}]}