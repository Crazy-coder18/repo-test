{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to My Documentation Site","text":""},{"location":"#table-of-contents","title":"Table of Contents","text":"<ul> <li>Getting Started</li> <li>Features</li> <li>Code Examples</li> <li>Resources</li> </ul>"},{"location":"#getting-started","title":"Getting Started","text":"<p>This is a sample documentation site with various types of content. Here you'll find examples of different markdown elements and formatting options.</p>"},{"location":"#prerequisites","title":"Prerequisites","text":"<ul> <li>Basic understanding of Markdown</li> <li>A text editor or IDE</li> <li>Git (optional)</li> </ul>"},{"location":"#features","title":"Features","text":"<p>Our documentation includes the following features:</p> <ol> <li>Responsive Design - Works on all devices</li> <li>Code Highlighting - Syntax highlighting for multiple languages</li> <li>Search Functionality - Find content quickly</li> <li>Navigation - Easy-to-use sidebar navigation</li> </ol>"},{"location":"#key-benefits","title":"Key Benefits","text":"Feature Description Status Fast Loading Optimized for speed \u2705 Complete Mobile Friendly Responsive design \u2705 Complete Dark Mode Toggle theme support \ud83d\udea7 In Progress Offline Support PWA capabilities \ud83d\udcdd Planned"},{"location":"#code-examples","title":"Code Examples","text":"<p>Here are some code snippets in different languages:</p>"},{"location":"#javascript","title":"JavaScript","text":"<pre><code>function greetUser(name) {\n    return `Hello, ${name}! Welcome to our documentation.`;\n}\n\nconst user = \"Developer\";\nconsole.log(greetUser(user));\n</code></pre>"},{"location":"#python","title":"Python","text":"<pre><code>def calculate_fibonacci(n):\n    if n &lt;= 1:\n        return n\n    return calculate_fibonacci(n-1) + calculate_fibonacci(n-2)\n\n# Generate first 10 Fibonacci numbers\nfor i in range(10):\n    print(f\"F({i}) = {calculate_fibonacci(i)}\")\n</code></pre>"},{"location":"#css","title":"CSS","text":"<pre><code>.documentation-theme {\n    --primary-color: #2563eb;\n    --secondary-color: #64748b;\n    --background-color: #f8fafc;\n    --text-color: #334155;\n}\n\n.card {\n    background: var(--background-color);\n    border-radius: 8px;\n    padding: 1.5rem;\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n</code></pre>"},{"location":"#resources","title":"Resources","text":""},{"location":"#useful-links","title":"Useful Links","text":"<ul> <li>Markdown Guide</li> <li>GitHub Documentation</li> <li>VS Code Tips</li> </ul>"},{"location":"#quick-tips","title":"Quick Tips","text":"<p>Pro Tip: Use keyboard shortcuts to speed up your workflow. <code>Ctrl+Shift+P</code> opens the command palette in VS Code.</p> <p>Note: Always backup your work before making major changes.</p>"},{"location":"#contact-information","title":"Contact Information","text":"<p>For questions or support, reach out to us:</p> <ul> <li>\ud83d\udce7 Email: support@example.com</li> <li>\ud83d\udcac Discord: Join our server</li> <li>\ud83d\udc26 Twitter: @ExampleDocs</li> </ul>"},{"location":"#recent-updates","title":"Recent Updates","text":""},{"location":"#version-210-july-2025","title":"Version 2.1.0 (July 2025)","text":"<ul> <li>\u2728 Added new search functionality</li> <li>\ud83d\udc1b Fixed navigation issues on mobile</li> <li>\ud83d\udcdd Updated documentation structure</li> <li>\ud83c\udfa8 Improved visual design</li> </ul>"},{"location":"#version-200-june-2025","title":"Version 2.0.0 (June 2025)","text":"<ul> <li>\ud83d\ude80 Complete redesign</li> <li>\u26a1 Performance improvements</li> <li>\ud83d\udcf1 Mobile-first approach</li> <li>\ud83c\udf19 Dark mode support</li> </ul>"},{"location":"#technical-specifications","title":"Technical Specifications","text":""},{"location":"#system-requirements","title":"System Requirements","text":"<ul> <li>Browser: Chrome 90+, Firefox 88+, Safari 14+</li> <li>Node.js: 16.x or higher (for development)</li> <li>Memory: 512 MB RAM minimum</li> <li>Storage: 100 MB available space</li> </ul>"},{"location":"#api-reference","title":"API Reference","text":""},{"location":"#authentication","title":"Authentication","text":"<pre><code>POST /api/auth/login\nContent-Type: application/json\n\n{\n  \"username\": \"user@example.com\",\n  \"password\": \"securePassword123\"\n}\n</code></pre>"},{"location":"#response","title":"Response","text":"<pre><code>{\n  \"success\": true,\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"expires_in\": 3600\n}\n</code></pre> <p>Last updated: July 3, 2025</p> <p>\u00a9 2025 Documentation Team. All rights reserved.</p>"},{"location":"sample/","title":"Microsoft Azure: Cloud Computing Platform","text":""},{"location":"sample/#overview","title":"\ud83c\udf10 Overview","text":"<p>Microsoft Azure is a comprehensive cloud computing platform that provides a wide range of services including computing, analytics, storage, and networking. Users can pick and choose from these services to develop and scale new applications or run existing applications in the public cloud.</p>"},{"location":"sample/#table-of-contents","title":"\ud83d\udccb Table of Contents","text":"<ul> <li>Core Services</li> <li>Compute Services</li> <li>Storage Solutions</li> <li>Networking</li> <li>AI &amp; Machine Learning</li> <li>Database Services</li> <li>Security &amp; Identity</li> <li>DevOps &amp; Development</li> <li>Getting Started</li> <li>Pricing Models</li> </ul>"},{"location":"sample/#core-services","title":"\ud83d\ude80 Core Services","text":""},{"location":"sample/#azure-resource-manager-arm","title":"Azure Resource Manager (ARM)","text":"<p>Azure Resource Manager is the deployment and management service for Azure. It provides a management layer that enables you to create, update, and delete resources in your Azure account.</p>"},{"location":"sample/#azure-portal","title":"Azure Portal","text":"<p>The Azure portal is a web-based, unified console that provides an alternative to command-line tools. With the Azure portal, you can manage your Azure subscription using a graphical user interface.</p>"},{"location":"sample/#compute-services","title":"\ud83d\udcbb Compute Services","text":""},{"location":"sample/#virtual-machines","title":"Virtual Machines","text":"<p>Azure Virtual Machines (VMs) give you the flexibility of virtualization without having to buy and maintain the physical hardware.</p> VM Series Use Case CPU Type A-Series Entry-level Basic D-Series General purpose Standard F-Series Compute optimized High-performance G-Series Memory optimized Large memory"},{"location":"sample/#azure-app-service","title":"Azure App Service","text":"<p>A fully managed platform for building, deploying, and scaling web apps.</p> <pre><code># Create a resource group\naz group create --name myResourceGroup --location \"East US\"\n\n# Create an App Service plan\naz appservice plan create --name myAppServicePlan --resource-group myResourceGroup --sku B1\n\n# Create a web app\naz webapp create --resource-group myResourceGroup --plan myAppServicePlan --name myUniqueAppName\n</code></pre>"},{"location":"sample/#azure-functions","title":"Azure Functions","text":"<p>Event-driven, serverless compute platform that can solve complex orchestration problems.</p> <pre><code>// Sample Azure Function (HTTP Trigger)\nmodule.exports = async function (context, req) {\n    context.log('JavaScript HTTP trigger function processed a request.');\n\n    const name = (req.query.name || (req.body &amp;&amp; req.body.name));\n    const responseMessage = name\n        ? \"Hello, \" + name + \". This HTTP triggered function executed successfully.\"\n        : \"This HTTP triggered function executed successfully. Pass a name in the query string or in the request body for a personalized response.\";\n\n    context.res = {\n        status: 200,\n        body: responseMessage\n    };\n}\n</code></pre>"},{"location":"sample/#azure-kubernetes-service-aks","title":"Azure Kubernetes Service (AKS)","text":"<p>Managed Kubernetes service that simplifies deploying a managed Kubernetes cluster in Azure.</p>"},{"location":"sample/#storage-solutions","title":"\ud83d\udcbe Storage Solutions","text":""},{"location":"sample/#blob-storage","title":"Blob Storage","text":"<p>Azure Blob storage is optimized for storing massive amounts of unstructured data.</p> <pre><code>from azure.storage.blob import BlobServiceClient\nimport os\n\n# Initialize the BlobServiceClient\nblob_service_client = BlobServiceClient(\n    account_url=\"https://mystorageaccount.blob.core.windows.net\",\n    credential=\"your_account_key\"\n)\n\n# Upload a file\ndef upload_blob(file_path, container_name, blob_name):\n    blob_client = blob_service_client.get_blob_client(\n        container=container_name, \n        blob=blob_name\n    )\n\n    with open(file_path, \"rb\") as data:\n        blob_client.upload_blob(data, overwrite=True)\n\n    print(f\"Uploaded {blob_name} to {container_name}\")\n</code></pre>"},{"location":"sample/#file-storage","title":"File Storage","text":"<p>Fully managed file shares in the cloud accessible via SMB protocol.</p>"},{"location":"sample/#table-storage","title":"Table Storage","text":"<p>NoSQL key-attribute data store using a schemaless design.</p>"},{"location":"sample/#networking","title":"\ud83c\udf10 Networking","text":""},{"location":"sample/#virtual-network-vnet","title":"Virtual Network (VNet)","text":"<p>Azure Virtual Network enables Azure resources to securely communicate with each other, the internet, and on-premises networks.</p>"},{"location":"sample/#load-balancer","title":"Load Balancer","text":"<p>Distribute incoming network traffic across multiple virtual machines.</p>"},{"location":"sample/#application-gateway","title":"Application Gateway","text":"<p>Web traffic load balancer with additional capabilities like SSL termination and Web Application Firewall.</p>"},{"location":"sample/#ai-machine-learning","title":"\ud83e\udd16 AI &amp; Machine Learning","text":""},{"location":"sample/#azure-cognitive-services","title":"Azure Cognitive Services","text":"<p>Pre-built AI models that you can integrate into your applications.</p> <pre><code>using Microsoft.Azure.CognitiveServices.Vision.ComputerVision;\nusing Microsoft.Azure.CognitiveServices.Vision.ComputerVision.Models;\n\npublic class ComputerVisionService\n{\n    private readonly ComputerVisionClient client;\n\n    public ComputerVisionService(string endpoint, string subscriptionKey)\n    {\n        client = new ComputerVisionClient(new ApiKeyServiceClientCredentials(subscriptionKey))\n        {\n            Endpoint = endpoint\n        };\n    }\n\n    public async Task&lt;string&gt; AnalyzeImageAsync(string imageUrl)\n    {\n        var features = new List&lt;VisualFeatureTypes?&gt;\n        {\n            VisualFeatureTypes.Description,\n            VisualFeatureTypes.Objects,\n            VisualFeatureTypes.Tags\n        };\n\n        var analysis = await client.AnalyzeImageAsync(imageUrl, features);\n        return analysis.Description.Captions.FirstOrDefault()?.Text ?? \"No description available\";\n    }\n}\n</code></pre>"},{"location":"sample/#azure-machine-learning","title":"Azure Machine Learning","text":"<p>End-to-end machine learning lifecycle management.</p>"},{"location":"sample/#azure-openai-service","title":"Azure OpenAI Service","text":"<p>Access to OpenAI's powerful language models including GPT-4, GPT-3.5-turbo, and DALL-E.</p>"},{"location":"sample/#database-services","title":"\ud83d\uddc4\ufe0f Database Services","text":""},{"location":"sample/#azure-sql-database","title":"Azure SQL Database","text":"<p>Fully managed relational database with auto-scale, integral intelligence, and robust security.</p>"},{"location":"sample/#cosmos-db","title":"Cosmos DB","text":"<p>Globally distributed, multi-model database service.</p> <pre><code>-- Sample Azure SQL Database query\nSELECT \n    p.ProductName,\n    p.Price,\n    c.CategoryName\nFROM Products p\nINNER JOIN Categories c ON p.CategoryID = c.CategoryID\nWHERE p.Price &gt; 100\nORDER BY p.Price DESC;\n</code></pre>"},{"location":"sample/#azure-database-for-mysqlpostgresql","title":"Azure Database for MySQL/PostgreSQL","text":"<p>Fully managed database services for open-source databases.</p>"},{"location":"sample/#security-identity","title":"\ud83d\udd10 Security &amp; Identity","text":""},{"location":"sample/#azure-active-directory-azure-ad","title":"Azure Active Directory (Azure AD)","text":"<p>Microsoft's cloud-based identity and access management service.</p>"},{"location":"sample/#key-vault","title":"Key Vault","text":"<p>Safeguard cryptographic keys and secrets used by cloud applications and services.</p>"},{"location":"sample/#security-center","title":"Security Center","text":"<p>Unified security management and advanced threat protection across hybrid cloud workloads.</p>"},{"location":"sample/#devops-development","title":"\ud83d\udd27 DevOps &amp; Development","text":""},{"location":"sample/#azure-devops","title":"Azure DevOps","text":"<p>Set of development tools for software teams including Azure Boards, Azure Repos, Azure Pipelines, Azure Test Plans, and Azure Artifacts.</p> <pre><code># Azure Pipelines YAML example\ntrigger:\n- main\n\npool:\n  vmImage: 'ubuntu-latest'\n\nvariables:\n  buildConfiguration: 'Release'\n\nsteps:\n- task: DotNetCoreCLI@2\n  displayName: 'Restore packages'\n  inputs:\n    command: 'restore'\n    projects: '**/*.csproj'\n\n- task: DotNetCoreCLI@2\n  displayName: 'Build project'\n  inputs:\n    command: 'build'\n    projects: '**/*.csproj'\n    arguments: '--configuration $(buildConfiguration)'\n\n- task: DotNetCoreCLI@2\n  displayName: 'Run tests'\n  inputs:\n    command: 'test'\n    projects: '**/*Tests.csproj'\n    arguments: '--configuration $(buildConfiguration) --collect \"Code coverage\"'\n</code></pre>"},{"location":"sample/#github-actions-for-azure","title":"GitHub Actions for Azure","text":"<p>Automate your software development workflows right in your GitHub repository.</p>"},{"location":"sample/#getting-started","title":"\ud83d\udea6 Getting Started","text":""},{"location":"sample/#step-1-create-an-azure-account","title":"Step 1: Create an Azure Account","text":"<ol> <li>Visit azure.microsoft.com</li> <li>Click \"Start free\" or \"Free account\"</li> <li>Sign up with your Microsoft account or create a new one</li> <li>Verify your identity and add payment information (free tier available)</li> </ol>"},{"location":"sample/#step-2-install-azure-cli","title":"Step 2: Install Azure CLI","text":"<pre><code># Install Azure CLI on Windows\nInvoke-WebRequest -Uri https://aka.ms/installazurecliwindows -OutFile .\\AzureCLI.msi\nStart-Process msiexec.exe -Wait -ArgumentList '/I AzureCLI.msi /quiet'\n\n# Login to Azure\naz login\n\n# Set your subscription\naz account set --subscription \"your-subscription-id\"\n</code></pre>"},{"location":"sample/#step-3-create-your-first-resource","title":"Step 3: Create Your First Resource","text":"<pre><code># Create a resource group\naz group create --name \"my-first-rg\" --location \"eastus\"\n\n# Create a storage account\naz storage account create \\\n    --name mystorageaccount123 \\\n    --resource-group my-first-rg \\\n    --location eastus \\\n    --sku Standard_LRS\n</code></pre>"},{"location":"sample/#pricing-models","title":"\ud83d\udcb0 Pricing Models","text":""},{"location":"sample/#pay-as-you-go","title":"Pay-As-You-Go","text":"<p>Pay only for what you use with no upfront costs.</p>"},{"location":"sample/#reserved-instances","title":"Reserved Instances","text":"<p>Save up to 72% compared to pay-as-you-go pricing with 1-year or 3-year terms.</p>"},{"location":"sample/#azure-hybrid-benefit","title":"Azure Hybrid Benefit","text":"<p>Use your existing on-premises Windows Server and SQL Server licenses on Azure.</p>"},{"location":"sample/#free-tier-services","title":"Free Tier Services","text":"<p>Azure offers several services with free tiers:</p> Service Free Tier Limits App Service 10 web apps Functions 1 million executions/month Cosmos DB 5 GB storage Blob Storage 5 GB LRS hot storage Virtual Machines 750 hours B1S instance"},{"location":"sample/#useful-resources","title":"\ud83d\udd17 Useful Resources","text":""},{"location":"sample/#documentation-learning","title":"Documentation &amp; Learning","text":"<ul> <li>Azure Documentation</li> <li>Microsoft Learn</li> <li>Azure Architecture Center</li> </ul>"},{"location":"sample/#tools-sdks","title":"Tools &amp; SDKs","text":"<ul> <li>Azure CLI</li> <li>Azure PowerShell</li> <li>Azure SDK for .NET</li> <li>Azure SDK for Python</li> <li>Azure SDK for JavaScript</li> </ul>"},{"location":"sample/#community-support","title":"Community &amp; Support","text":"<ul> <li>Azure Community Support</li> <li>Stack Overflow - Azure</li> <li>Azure Updates</li> </ul>"},{"location":"sample/#best-practices","title":"\ud83c\udfd7\ufe0f Best Practices","text":""},{"location":"sample/#security","title":"Security","text":"<ul> <li>Enable Multi-Factor Authentication (MFA)</li> <li>Use Azure Key Vault for secrets management</li> <li>Implement Role-Based Access Control (RBAC)</li> <li>Enable Azure Security Center recommendations</li> </ul>"},{"location":"sample/#cost-optimization","title":"Cost Optimization","text":"<ul> <li>Use Azure Cost Management + Billing</li> <li>Implement resource tagging strategy</li> <li>Set up budget alerts</li> <li>Consider reserved instances for predictable workloads</li> </ul>"},{"location":"sample/#performance","title":"Performance","text":"<ul> <li>Choose the right Azure region</li> <li>Use Azure CDN for global content delivery</li> <li>Implement auto-scaling</li> <li>Monitor with Azure Monitor and Application Insights</li> </ul>"},{"location":"sample/#reliability","title":"Reliability","text":"<ul> <li>Design for failure with redundancy</li> <li>Use availability zones</li> <li>Implement backup and disaster recovery</li> <li>Use health checks and monitoring</li> </ul>"},{"location":"sample/#support-contact","title":"\ud83d\udcde Support &amp; Contact","text":"<p>For Azure support and assistance:</p> <ul> <li>\ud83c\udfab Azure Support Plans: Basic (Free), Developer ($29/month), Standard ($100/month), Professional Direct ($1000/month)</li> <li>\ud83d\udcda Documentation: docs.microsoft.com/azure</li> <li>\ud83d\udcac Community Forums: Microsoft Q&amp;A</li> <li>\ud83c\udf93 Training: Microsoft Learn</li> </ul> <p>Last updated: July 3, 2025</p> <p>\u00a9 2025 Microsoft Corporation. All rights reserved.</p>"},{"location":"sk/","title":"Microsoft Semantic Kernel","text":""},{"location":"sk/#overview","title":"\ud83e\udde0 Overview","text":"<p>Microsoft Semantic Kernel (SK) is an open-source SDK that lets you easily combine AI services like OpenAI, Azure OpenAI, and Hugging Face with conventional programming languages like C#, Python, and Java. It serves as a lightweight, enterprise-ready orchestration layer that enables developers to create AI agents and integrate large language models (LLMs) into their applications.</p>"},{"location":"sk/#table-of-contents","title":"\ud83d\udccb Table of Contents","text":"<ul> <li>Key Features</li> <li>Architecture</li> <li>Getting Started</li> <li>Core Concepts</li> <li>Plugins &amp; Functions</li> <li>Memory &amp; Embeddings</li> <li>Planners</li> <li>Code Examples</li> <li>Best Practices</li> <li>Integration Scenarios</li> <li>Troubleshooting</li> </ul>"},{"location":"sk/#key-features","title":"\ud83d\ude80 Key Features","text":""},{"location":"sk/#multi-language-support","title":"Multi-Language Support","text":"<ul> <li>C#: First-class support with .NET integration</li> <li>Python: Full-featured implementation</li> <li>Java: Enterprise-ready SDK</li> <li>TypeScript/JavaScript: Web and Node.js support</li> </ul>"},{"location":"sk/#ai-service-integration","title":"AI Service Integration","text":"Service Provider Capabilities GPT-4/GPT-3.5 OpenAI Text generation, completion Azure OpenAI Microsoft Enterprise-grade AI services Claude Anthropic Advanced reasoning Llama 2 Meta Open-source models Hugging Face Community Diverse model ecosystem"},{"location":"sk/#enterprise-features","title":"Enterprise Features","text":"<ul> <li>\ud83d\udd10 Security: Built-in authentication and authorization</li> <li>\ud83d\udcca Observability: Logging, metrics, and tracing</li> <li>\ud83c\udfd7\ufe0f Scalability: Async/await patterns and performance optimization</li> <li>\ud83d\udd27 Extensibility: Plugin architecture for custom functionality</li> </ul>"},{"location":"sk/#architecture","title":"\ud83c\udfd7\ufe0f Architecture","text":"<pre><code>graph TB\n    A[Application Layer] --&gt; B[Semantic Kernel]\n    B --&gt; C[Kernel Services]\n    B --&gt; D[Plugins]\n    B --&gt; E[Memory]\n    B --&gt; F[Planners]\n\n    C --&gt; G[AI Services]\n    C --&gt; H[Connectors]\n\n    D --&gt; I[Native Functions]\n    D --&gt; J[Semantic Functions]\n\n    E --&gt; K[Vector Store]\n    E --&gt; L[Embeddings]\n\n    F --&gt; M[Sequential Planner]\n    F --&gt; N[Action Planner]\n\n    G --&gt; O[OpenAI]\n    G --&gt; P[Azure OpenAI]\n    G --&gt; Q[Hugging Face]\n</code></pre>"},{"location":"sk/#getting-started","title":"\ud83c\udfaf Getting Started","text":""},{"location":"sk/#installation","title":"Installation","text":""},{"location":"sk/#c-net","title":"C# (.NET)","text":"<pre><code>dotnet add package Microsoft.SemanticKernel\ndotnet add package Microsoft.SemanticKernel.Plugins.Core\n</code></pre>"},{"location":"sk/#python","title":"Python","text":"<pre><code>pip install semantic-kernel\npip install semantic-kernel[azure]\n</code></pre>"},{"location":"sk/#typescriptjavascript","title":"TypeScript/JavaScript","text":"<pre><code>npm install @microsoft/semantic-kernel\n</code></pre>"},{"location":"sk/#basic-setup","title":"Basic Setup","text":""},{"location":"sk/#c-example","title":"C# Example","text":"<pre><code>using Microsoft.SemanticKernel;\nusing Microsoft.SemanticKernel.AI.OpenAI;\n\n// Create kernel instance\nvar kernel = Kernel.CreateBuilder()\n    .AddAzureOpenAIChatCompletion(\n        deploymentName: \"gpt-35-turbo\",\n        endpoint: \"https://your-resource.openai.azure.com/\",\n        apiKey: \"your-api-key\")\n    .Build();\n\n// Simple prompt execution\nvar prompt = \"Translate 'Hello World' to French\";\nvar result = await kernel.InvokePromptAsync(prompt);\nConsole.WriteLine(result);\n</code></pre>"},{"location":"sk/#python-example","title":"Python Example","text":"<pre><code>import semantic_kernel as sk\nfrom semantic_kernel.connectors.ai.open_ai import AzureChatCompletion\n\n# Initialize kernel\nkernel = sk.Kernel()\n\n# Add AI service\nazure_chat_service = AzureChatCompletion(\n    deployment_name=\"gpt-35-turbo\",\n    endpoint=\"https://your-resource.openai.azure.com/\",\n    api_key=\"your-api-key\"\n)\nkernel.add_chat_service(\"azure_chat\", azure_chat_service)\n\n# Execute prompt\nasync def main():\n    prompt = \"Explain quantum computing in simple terms\"\n    result = await kernel.invoke_prompt_async(prompt)\n    print(result)\n\nimport asyncio\nasyncio.run(main())\n</code></pre>"},{"location":"sk/#core-concepts","title":"\ud83e\udde9 Core Concepts","text":""},{"location":"sk/#1-kernel","title":"1. Kernel","text":"<p>The central orchestration engine that manages AI services, plugins, and memory.</p> <pre><code>var kernel = Kernel.CreateBuilder()\n    .AddAzureOpenAIChatCompletion(deploymentName, endpoint, apiKey)\n    .AddAzureOpenAITextEmbeddingGeneration(embeddingDeployment, endpoint, apiKey)\n    .Build();\n</code></pre>"},{"location":"sk/#2-functions","title":"2. Functions","text":"<p>Reusable pieces of functionality that can be combined to solve complex problems.</p>"},{"location":"sk/#native-functions-c","title":"Native Functions (C#)","text":"<pre><code>public class MathPlugin\n{\n    [KernelFunction]\n    [Description(\"Add two numbers\")]\n    public double Add(\n        [Description(\"First number\")] double number1,\n        [Description(\"Second number\")] double number2)\n    {\n        return number1 + number2;\n    }\n\n    [KernelFunction]\n    [Description(\"Calculate compound interest\")]\n    public double CompoundInterest(\n        [Description(\"Principal amount\")] double principal,\n        [Description(\"Annual interest rate\")] double rate,\n        [Description(\"Number of years\")] int years)\n    {\n        return principal * Math.Pow(1 + rate, years);\n    }\n}\n</code></pre>"},{"location":"sk/#semantic-functions","title":"Semantic Functions","text":"<pre><code>var summarizeFunction = kernel.CreateFunctionFromPrompt(\n    promptTemplate: @\"\n    Summarize the following text in 2-3 sentences:\n\n    {{$input}}\n\n    Summary:\",\n    functionName: \"Summarize\",\n    description: \"Summarize text content\"\n);\n\nvar result = await kernel.InvokeAsync(summarizeFunction, new() { [\"input\"] = longText });\n</code></pre>"},{"location":"sk/#3-plugins","title":"3. Plugins","text":"<p>Collections of related functions that can be imported and used together.</p> <pre><code>// Import built-in plugins\nkernel.ImportPluginFromType&lt;TimePlugin&gt;(\"time\");\nkernel.ImportPluginFromType&lt;MathPlugin&gt;(\"math\");\n\n// Import custom plugin\nkernel.ImportPluginFromObject(new EmailPlugin(emailService), \"email\");\n\n// Use plugin functions\nvar currentTime = await kernel.InvokeAsync(\"time\", \"Now\");\nvar sum = await kernel.InvokeAsync(\"math\", \"Add\", new() { \n    [\"number1\"] = \"10\", \n    [\"number2\"] = \"20\" \n});\n</code></pre>"},{"location":"sk/#memory-embeddings","title":"\ud83e\udde0 Memory &amp; Embeddings","text":""},{"location":"sk/#vector-memory-store","title":"Vector Memory Store","text":"<pre><code>using Microsoft.SemanticKernel.Memory;\n\n// Configure memory store\nvar memoryBuilder = new MemoryBuilder();\nmemoryBuilder.WithAzureOpenAITextEmbeddingGeneration(\n    deploymentName: \"text-embedding-ada-002\",\n    endpoint: endpoint,\n    apiKey: apiKey);\nmemoryBuilder.WithMemoryStore(new VolatileMemoryStore());\n\nvar memory = memoryBuilder.Build();\n\n// Store information\nawait memory.SaveInformationAsync(\n    collection: \"products\",\n    text: \"The iPhone 15 Pro features a titanium design and A17 Pro chip\",\n    id: \"iphone15pro\",\n    description: \"iPhone 15 Pro specifications\"\n);\n\n// Search memory\nvar searchResults = memory.SearchAsync(\n    collection: \"products\",\n    query: \"What are the features of the latest iPhone?\",\n    limit: 5);\n\nawait foreach (var result in searchResults)\n{\n    Console.WriteLine($\"Relevance: {result.Relevance:F2}\");\n    Console.WriteLine($\"Text: {result.Metadata.Text}\");\n}\n</code></pre>"},{"location":"sk/#rag-retrieval-augmented-generation","title":"RAG (Retrieval-Augmented Generation)","text":"<pre><code>import semantic_kernel as sk\nfrom semantic_kernel.memory.volatile_memory_store import VolatileMemoryStore\n\n# Setup kernel with memory\nkernel = sk.Kernel()\nkernel.add_chat_service(\"azure_chat\", azure_chat_service)\nkernel.add_text_embedding_generation_service(\n    \"azure_embedding\", azure_embedding_service\n)\n\n# Register memory store\nkernel.register_memory_store(VolatileMemoryStore())\n\n# Save documents to memory\nawait kernel.memory.save_information_async(\n    collection=\"documents\",\n    text=\"Python is a high-level programming language known for its simplicity\",\n    id=\"python_intro\",\n    description=\"Introduction to Python programming\"\n)\n\n# RAG-enabled function\nrag_function = kernel.create_semantic_function(\n    prompt_template=\"\"\"\n    Use the following context to answer the question:\n\n    Context: {{recall $query}}\n\n    Question: {{$query}}\n\n    Answer:\"\"\",\n    function_name=\"RAGAnswer\"\n)\n\nresult = await kernel.run_async(\n    rag_function,\n    input_vars={\"query\": \"What is Python?\"}\n)\n</code></pre>"},{"location":"sk/#planners","title":"\ud83c\udfaf Planners","text":""},{"location":"sk/#sequential-planner","title":"Sequential Planner","text":"<p>Automatically creates and executes multi-step plans.</p> <pre><code>using Microsoft.SemanticKernel.Planning;\n\nvar planner = new SequentialPlanner(kernel);\n\nvar plan = await planner.CreatePlanAsync(\n    \"Send an email to john@example.com with the weather forecast for Seattle\");\n\nConsole.WriteLine(\"Plan steps:\");\nforeach (var step in plan.Steps)\n{\n    Console.WriteLine($\"- {step.Description}\");\n}\n\n// Execute the plan\nvar result = await kernel.RunAsync(plan);\nConsole.WriteLine($\"Result: {result}\");\n</code></pre>"},{"location":"sk/#function-calling-planner","title":"Function Calling Planner","text":"<pre><code>from semantic_kernel.planning import FunctionCallingStepwisePlanner\n\n# Create planner\nplanner = FunctionCallingStepwisePlanner(\n    kernel, \n    max_iterations=10,\n    max_tokens=4000\n)\n\n# Execute complex task\nresult = await planner.invoke_async(\n    \"Find the current temperature in New York and convert it to Celsius\"\n)\n\nprint(f\"Final result: {result.final_answer}\")\nprint(f\"Steps taken: {len(result.iterations)}\")\n</code></pre>"},{"location":"sk/#advanced-code-examples","title":"\ud83d\udcbb Advanced Code Examples","text":""},{"location":"sk/#custom-ai-agent","title":"Custom AI Agent","text":"<pre><code>public class CustomerServiceAgent\n{\n    private readonly Kernel _kernel;\n    private readonly ISemanticTextMemory _memory;\n\n    public CustomerServiceAgent(Kernel kernel, ISemanticTextMemory memory)\n    {\n        _kernel = kernel;\n        _memory = memory;\n    }\n\n    public async Task&lt;string&gt; HandleCustomerQueryAsync(string query, string customerId)\n    {\n        // Retrieve customer context from memory\n        var customerContext = await _memory.SearchAsync(\n            collection: $\"customer_{customerId}\",\n            query: query,\n            limit: 3\n        ).ToListAsync();\n\n        var contextText = string.Join(\"\\n\", customerContext.Select(c =&gt; c.Metadata.Text));\n\n        // Create contextual response\n        var responseFunction = _kernel.CreateFunctionFromPrompt(@\"\n            You are a helpful customer service agent. Use the customer context below to provide a personalized response.\n\n            Customer Context:\n            {{$context}}\n\n            Customer Query: {{$query}}\n\n            Response:\");\n\n        var result = await _kernel.InvokeAsync(responseFunction, new KernelArguments\n        {\n            [\"context\"] = contextText,\n            [\"query\"] = query\n        });\n\n        return result.ToString();\n    }\n}\n</code></pre>"},{"location":"sk/#multi-modal-processing","title":"Multi-Modal Processing","text":"<pre><code>async def process_image_and_text(kernel, image_path: str, text_query: str):\n    \"\"\"Process both image and text inputs using multi-modal AI\"\"\"\n\n    # Image analysis function\n    image_function = kernel.create_semantic_function(\n        prompt_template=\"\"\"\n        Analyze this image and describe what you see:\n\n        Image: {{$image}}\n\n        Description:\"\"\",\n        function_name=\"AnalyzeImage\"\n    )\n\n    # Text processing function  \n    text_function = kernel.create_semantic_function(\n        prompt_template=\"\"\"\n        Based on the image description and user query, provide a comprehensive answer:\n\n        Image Description: {{$image_description}}\n        User Query: {{$query}}\n\n        Answer:\"\"\",\n        function_name=\"ProcessQuery\"\n    )\n\n    # Load and encode image\n    with open(image_path, \"rb\") as image_file:\n        image_data = base64.b64encode(image_file.read()).decode()\n\n    # Analyze image\n    image_result = await kernel.run_async(\n        image_function,\n        input_vars={\"image\": image_data}\n    )\n\n    # Process combined input\n    final_result = await kernel.run_async(\n        text_function,\n        input_vars={\n            \"image_description\": str(image_result),\n            \"query\": text_query\n        }\n    )\n\n    return str(final_result)\n</code></pre>"},{"location":"sk/#streaming-responses","title":"Streaming Responses","text":"<pre><code>public async IAsyncEnumerable&lt;string&gt; StreamResponseAsync(string prompt)\n{\n    var function = _kernel.CreateFunctionFromPrompt(prompt);\n\n    await foreach (var chunk in _kernel.InvokeStreamingAsync&lt;string&gt;(function))\n    {\n        yield return chunk;\n    }\n}\n\n// Usage\nawait foreach (var chunk in agent.StreamResponseAsync(\"Write a story about AI\"))\n{\n    Console.Write(chunk);\n    await Task.Delay(50); // Simulate typing effect\n}\n</code></pre>"},{"location":"sk/#best-practices","title":"\ud83d\udcca Best Practices","text":""},{"location":"sk/#1-performance-optimization","title":"1. Performance Optimization","text":"<pre><code>// Use dependency injection\nservices.AddScoped&lt;Kernel&gt;(provider =&gt; \n{\n    return Kernel.CreateBuilder()\n        .AddAzureOpenAIChatCompletion(/* config */)\n        .Build();\n});\n\n// Implement caching\nservices.AddMemoryCache();\nservices.AddScoped&lt;ICachedKernelService, CachedKernelService&gt;();\n\n// Connection pooling\nservices.Configure&lt;HttpClientFactoryOptions&gt;(options =&gt;\n{\n    options.HandlerLifetime = TimeSpan.FromMinutes(5);\n});\n</code></pre>"},{"location":"sk/#2-error-handling","title":"2. Error Handling","text":"<pre><code>public async Task&lt;string&gt; SafeInvokeAsync(string prompt)\n{\n    try\n    {\n        var result = await _kernel.InvokePromptAsync(prompt);\n        return result.ToString();\n    }\n    catch (HttpRequestException ex) when (ex.Message.Contains(\"429\"))\n    {\n        // Rate limiting - implement exponential backoff\n        await Task.Delay(TimeSpan.FromSeconds(Math.Pow(2, retryCount)));\n        return await SafeInvokeAsync(prompt);\n    }\n    catch (ArgumentException ex)\n    {\n        // Invalid input handling\n        _logger.LogWarning(\"Invalid prompt: {Error}\", ex.Message);\n        return \"I'm sorry, I couldn't process that request.\";\n    }\n}\n</code></pre>"},{"location":"sk/#3-security-considerations","title":"3. Security Considerations","text":"<pre><code>// Input validation\npublic class PromptValidator\n{\n    private readonly string[] _blockedPatterns = { \"ignore previous\", \"system:\", \"assistant:\" };\n\n    public bool IsValidPrompt(string prompt)\n    {\n        return !_blockedPatterns.Any(pattern =&gt; \n            prompt.ToLower().Contains(pattern.ToLower()));\n    }\n}\n\n// Content filtering\npublic async Task&lt;string&gt; GetFilteredResponseAsync(string prompt)\n{\n    var result = await _kernel.InvokePromptAsync(prompt);\n    var filteredResult = await _contentFilter.FilterAsync(result.ToString());\n    return filteredResult;\n}\n</code></pre>"},{"location":"sk/#integration-scenarios","title":"\ud83d\udd17 Integration Scenarios","text":""},{"location":"sk/#1-web-api-integration","title":"1. Web API Integration","text":"<pre><code>[ApiController]\n[Route(\"api/[controller]\")]\npublic class ChatController : ControllerBase\n{\n    private readonly Kernel _kernel;\n\n    public ChatController(Kernel kernel)\n    {\n        _kernel = kernel;\n    }\n\n    [HttpPost(\"completions\")]\n    public async Task&lt;IActionResult&gt; GetCompletion([FromBody] ChatRequest request)\n    {\n        var result = await _kernel.InvokePromptAsync(request.Prompt);\n\n        return Ok(new ChatResponse\n        {\n            Message = result.ToString(),\n            Timestamp = DateTime.UtcNow\n        });\n    }\n\n    [HttpPost(\"completions/stream\")]\n    public async Task&lt;IActionResult&gt; GetStreamingCompletion([FromBody] ChatRequest request)\n    {\n        Response.ContentType = \"text/event-stream\";\n\n        await foreach (var chunk in _kernel.InvokeStreamingAsync&lt;string&gt;(\n            _kernel.CreateFunctionFromPrompt(request.Prompt)))\n        {\n            await Response.WriteAsync($\"data: {chunk}\\n\\n\");\n            await Response.Body.FlushAsync();\n        }\n\n        return new EmptyResult();\n    }\n}\n</code></pre>"},{"location":"sk/#2-background-service","title":"2. Background Service","text":"<pre><code>public class DocumentProcessingService : BackgroundService\n{\n    private readonly Kernel _kernel;\n    private readonly IServiceProvider _serviceProvider;\n\n    protected override async Task ExecuteAsync(CancellationToken stoppingToken)\n    {\n        while (!stoppingToken.IsCancellationRequested)\n        {\n            using var scope = _serviceProvider.CreateScope();\n            var documentQueue = scope.ServiceProvider.GetRequiredService&lt;IDocumentQueue&gt;();\n\n            var document = await documentQueue.DequeueAsync(stoppingToken);\n            if (document != null)\n            {\n                await ProcessDocumentAsync(document);\n            }\n\n            await Task.Delay(1000, stoppingToken);\n        }\n    }\n\n    private async Task ProcessDocumentAsync(Document document)\n    {\n        var summaryFunction = _kernel.CreateFunctionFromPrompt(@\"\n            Summarize the following document:\n\n            {{$content}}\n\n            Summary:\");\n\n        var summary = await _kernel.InvokeAsync(summaryFunction, \n            new KernelArguments { [\"content\"] = document.Content });\n\n        document.Summary = summary.ToString();\n        await _documentRepository.UpdateAsync(document);\n    }\n}\n</code></pre>"},{"location":"sk/#troubleshooting","title":"\ud83d\udee0\ufe0f Troubleshooting","text":""},{"location":"sk/#common-issues","title":"Common Issues","text":""},{"location":"sk/#1-rate-limiting","title":"1. Rate Limiting","text":"<pre><code>// Implement retry with exponential backoff\npublic class RateLimitHandler : DelegatingHandler\n{\n    protected override async Task&lt;HttpResponseMessage&gt; SendAsync(\n        HttpRequestMessage request, CancellationToken cancellationToken)\n    {\n        var response = await base.SendAsync(request, cancellationToken);\n\n        if (response.StatusCode == HttpStatusCode.TooManyRequests)\n        {\n            var retryAfter = response.Headers.RetryAfter?.Delta ?? TimeSpan.FromSeconds(1);\n            await Task.Delay(retryAfter, cancellationToken);\n            return await SendAsync(request, cancellationToken);\n        }\n\n        return response;\n    }\n}\n</code></pre>"},{"location":"sk/#2-memory-management","title":"2. Memory Management","text":"<pre><code># Proper cleanup for long-running applications\nimport gc\nfrom semantic_kernel.memory import VolatileMemoryStore\n\nclass ManagedMemoryStore:\n    def __init__(self, max_items: int = 1000):\n        self.store = VolatileMemoryStore()\n        self.max_items = max_items\n        self.item_count = 0\n\n    async def save_information_async(self, collection: str, text: str, id: str):\n        if self.item_count &gt;= self.max_items:\n            await self.cleanup_old_items()\n\n        await self.store.save_information_async(collection, text, id)\n        self.item_count += 1\n\n    async def cleanup_old_items(self):\n        # Implement LRU or time-based cleanup\n        pass\n</code></pre>"},{"location":"sk/#performance-monitoring","title":"Performance Monitoring","text":"<pre><code>public class KernelMetrics\n{\n    private readonly IMetrics _metrics;\n    private readonly Counter&lt;int&gt; _requestCounter;\n    private readonly Histogram&lt;double&gt; _responseTime;\n\n    public KernelMetrics(IMeterFactory meterFactory)\n    {\n        var meter = meterFactory.Create(\"SemanticKernel\");\n        _requestCounter = meter.CreateCounter&lt;int&gt;(\"sk_requests_total\");\n        _responseTime = meter.CreateHistogram&lt;double&gt;(\"sk_response_duration_seconds\");\n    }\n\n    public async Task&lt;T&gt; MeasureAsync&lt;T&gt;(Func&lt;Task&lt;T&gt;&gt; operation, string functionName)\n    {\n        var stopwatch = Stopwatch.StartNew();\n        try\n        {\n            var result = await operation();\n            _requestCounter.Add(1, new TagList { [\"function\"] = functionName, [\"status\"] = \"success\" });\n            return result;\n        }\n        catch\n        {\n            _requestCounter.Add(1, new TagList { [\"function\"] = functionName, [\"status\"] = \"error\" });\n            throw;\n        }\n        finally\n        {\n            _responseTime.Record(stopwatch.Elapsed.TotalSeconds, new TagList { [\"function\"] = functionName });\n        }\n    }\n}\n</code></pre>"},{"location":"sk/#resources","title":"\ud83d\udcda Resources","text":""},{"location":"sk/#official-documentation","title":"Official Documentation","text":"<ul> <li>Semantic Kernel GitHub</li> <li>Official Documentation</li> <li>API Reference</li> </ul>"},{"location":"sk/#community-learning","title":"Community &amp; Learning","text":"<ul> <li>Semantic Kernel Discord</li> <li>Sample Applications</li> <li>YouTube Tutorials</li> </ul>"},{"location":"sk/#tools-extensions","title":"Tools &amp; Extensions","text":"<ul> <li>Visual Studio Code Extension: Semantic Kernel Tools</li> <li>Azure DevOps Extension: SK Pipeline Tasks</li> <li>NuGet Packages: Microsoft.SemanticKernel.*</li> <li>pip packages: semantic-kernel, semantic-kernel[azure]</li> </ul>"},{"location":"sk/#recent-updates","title":"\ud83d\udd04 Recent Updates","text":""},{"location":"sk/#version-100-latest","title":"Version 1.0.0 (Latest)","text":"<ul> <li>\u2728 Stable API: Production-ready with semantic versioning</li> <li>\ud83d\ude80 Performance: 50% faster function execution</li> <li>\ud83d\udd27 New Planners: Function Calling and Handlebars planners</li> <li>\ud83d\udcf1 Mobile Support: Xamarin and MAUI compatibility</li> <li>\ud83c\udf10 Multi-language: Java and TypeScript GA releases</li> </ul>"},{"location":"sk/#upcoming-features-roadmap","title":"Upcoming Features (Roadmap)","text":"<ul> <li>\ud83e\udd16 Agent Framework: Multi-agent orchestration</li> <li>\ud83d\udd04 Workflow Engine: Visual workflow designer</li> <li>\ud83d\udcca Analytics Dashboard: Built-in observability</li> <li>\ud83c\udf0d Edge Deployment: IoT and edge computing support</li> </ul> <p>Last updated: July 3, 2025</p> <p>\u00a9 2025 Microsoft Corporation. All rights reserved.</p>"},{"location":"test_blog/","title":"Test Blog Post","text":""},{"location":"test_blog/#generated-at-2025-07-03-154948","title":"Generated at: 2025-07-03 15:49:48","text":"<p>This is a test blog post to verify that the AI Blog Agent can successfully upload content to GitHub.</p>"},{"location":"test_blog/#features-tested","title":"Features Tested:","text":"<ul> <li>\u2705 File creation in docs/ folder</li> <li>\u2705 Markdown content formatting</li> <li>\u2705 GitHub API integration</li> </ul>"},{"location":"test_blog/#code-example","title":"Code Example:","text":"<pre><code>def test_function():\n    print(\"AI Blog Agent is working!\")\n    return True\n</code></pre> <p>End of test post.</p>"},{"location":"vk/","title":"Virat Kohli - The King of Cricket","text":""},{"location":"vk/#personal-information","title":"Personal Information","text":"<ul> <li>Full Name: Virat Kohli</li> <li>Born: November 5, 1988</li> <li>Birthplace: Delhi, India</li> <li>Age: 36 years old</li> <li>Height: 5'9\" (175 cm)</li> </ul>"},{"location":"vk/#career-overview","title":"Career Overview","text":"<p>Virat Kohli is one of the greatest batsmen in cricket history. He is known for his aggressive batting style and exceptional fitness.</p>"},{"location":"vk/#team-career","title":"Team Career","text":"<ul> <li>International Debut: 2008</li> <li>Test Debut: June 20, 2011</li> <li>ODI Debut: August 18, 2008</li> <li>T20I Debut: June 12, 2010</li> </ul>"},{"location":"vk/#major-achievements","title":"Major Achievements","text":""},{"location":"vk/#records","title":"Records","text":"<ul> <li>Most centuries in ODI cricket (50+ centuries)</li> <li>Fastest to reach 8,000, 9,000, 10,000, 11,000, and 12,000 ODI runs</li> <li>Most double centuries as captain in Test cricket</li> </ul>"},{"location":"vk/#awards","title":"Awards","text":"<ul> <li>Rajiv Gandhi Khel Ratna Award (2018)</li> <li>Padma Shri (2017)</li> <li>Arjuna Award (2013)</li> </ul>"},{"location":"vk/#ipl-career","title":"IPL Career","text":"<ul> <li>Team: Royal Challengers Bangalore (RCB)</li> <li>Role: Batsman and former captain</li> <li>IPL Debut: 2008</li> <li>Orange Cap: 2016 (973 runs)</li> </ul>"},{"location":"vk/#captaincy","title":"Captaincy","text":"<ul> <li>Test Captain: 2014-2022</li> <li>ODI/T20I Captain: 2017-2022</li> <li>Led India to historic Test series wins in Australia and England</li> </ul>"},{"location":"vk/#personal-life","title":"Personal Life","text":"<ul> <li>Wife: Anushka Sharma (Bollywood actress)</li> <li>Marriage: December 11, 2017</li> <li>Children: Daughter Vamika (born 2021), Son Akaay (born 2024)</li> </ul>"},{"location":"vk/#business-ventures","title":"Business Ventures","text":"<ul> <li>One8 Commune: Restaurant chain</li> <li>Wrogn: Clothing brand</li> <li>Various endorsements and investments</li> </ul>"},{"location":"vk/#playing-style","title":"Playing Style","text":"<p>Virat Kohli is known for his: - Aggressive batting approach - Excellent fitness and running between wickets - Strong mental game and determination - Ability to chase targets in limited-overs cricket</p> <p>The King continues to inspire millions of cricket fans worldwide! \ud83c\udfcf</p>"}]}